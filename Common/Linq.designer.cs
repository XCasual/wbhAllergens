#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AllerConnectCommon
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InhaltsstoffeLocal")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAllergen(Allergen instance);
    partial void UpdateAllergen(Allergen instance);
    partial void DeleteAllergen(Allergen instance);
    partial void InsertSymbol(Symbol instance);
    partial void UpdateSymbol(Symbol instance);
    partial void DeleteSymbol(Symbol instance);
    partial void InsertAllergensLocal(AllergensLocal instance);
    partial void UpdateAllergensLocal(AllergensLocal instance);
    partial void DeleteAllergensLocal(AllergensLocal instance);
    partial void InsertAllergensSymbol(AllergensSymbol instance);
    partial void UpdateAllergensSymbol(AllergensSymbol instance);
    partial void DeleteAllergensSymbol(AllergensSymbol instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCategoriesLocal(CategoriesLocal instance);
    partial void UpdateCategoriesLocal(CategoriesLocal instance);
    partial void DeleteCategoriesLocal(CategoriesLocal instance);
    partial void InsertIngridient(Ingridient instance);
    partial void UpdateIngridient(Ingridient instance);
    partial void DeleteIngridient(Ingridient instance);
    partial void InsertIngridientsAllergen(IngridientsAllergen instance);
    partial void UpdateIngridientsAllergen(IngridientsAllergen instance);
    partial void DeleteIngridientsAllergen(IngridientsAllergen instance);
    partial void InsertIngridientsLocal(IngridientsLocal instance);
    partial void UpdateIngridientsLocal(IngridientsLocal instance);
    partial void DeleteIngridientsLocal(IngridientsLocal instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductsIngridient(ProductsIngridient instance);
    partial void UpdateProductsIngridient(ProductsIngridient instance);
    partial void DeleteProductsIngridient(ProductsIngridient instance);
    partial void InsertProductsLocal(ProductsLocal instance);
    partial void UpdateProductsLocal(ProductsLocal instance);
    partial void DeleteProductsLocal(ProductsLocal instance);
    partial void InsertProductsLocationsID(ProductsLocationsID instance);
    partial void UpdateProductsLocationsID(ProductsLocationsID instance);
    partial void DeleteProductsLocationsID(ProductsLocationsID instance);
    partial void InsertProductsSymbol(ProductsSymbol instance);
    partial void UpdateProductsSymbol(ProductsSymbol instance);
    partial void DeleteProductsSymbol(ProductsSymbol instance);
    partial void InsertProductProduct(ProductProduct instance);
    partial void UpdateProductProduct(ProductProduct instance);
    partial void DeleteProductProduct(ProductProduct instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::AllerConnectCommon.Properties.Settings.Default.xstoredbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Allergen> Allergens
		{
			get
			{
				return this.GetTable<Allergen>();
			}
		}
		
		public System.Data.Linq.Table<Symbol> Symbols
		{
			get
			{
				return this.GetTable<Symbol>();
			}
		}
		
		public System.Data.Linq.Table<AllergensLocal> AllergensLocals
		{
			get
			{
				return this.GetTable<AllergensLocal>();
			}
		}
		
		public System.Data.Linq.Table<AllergensSymbol> AllergensSymbols
		{
			get
			{
				return this.GetTable<AllergensSymbol>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<CategoriesLocal> CategoriesLocals
		{
			get
			{
				return this.GetTable<CategoriesLocal>();
			}
		}
		
		public System.Data.Linq.Table<Ingridient> Ingridients
		{
			get
			{
				return this.GetTable<Ingridient>();
			}
		}
		
		public System.Data.Linq.Table<IngridientsAllergen> IngridientsAllergens
		{
			get
			{
				return this.GetTable<IngridientsAllergen>();
			}
		}
		
		public System.Data.Linq.Table<IngridientsLocal> IngridientsLocals
		{
			get
			{
				return this.GetTable<IngridientsLocal>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductsIngridient> ProductsIngridients
		{
			get
			{
				return this.GetTable<ProductsIngridient>();
			}
		}
		
		public System.Data.Linq.Table<ProductsLocal> ProductsLocals
		{
			get
			{
				return this.GetTable<ProductsLocal>();
			}
		}
		
		public System.Data.Linq.Table<ProductsLocationsID> ProductsLocationsIDs
		{
			get
			{
				return this.GetTable<ProductsLocationsID>();
			}
		}
		
		public System.Data.Linq.Table<ProductsSymbol> ProductsSymbols
		{
			get
			{
				return this.GetTable<ProductsSymbol>();
			}
		}
		
		public System.Data.Linq.Table<SymbolData> SymbolDatas
		{
			get
			{
				return this.GetTable<SymbolData>();
			}
		}
		
		public System.Data.Linq.Table<CategoryData> CategoryDatas
		{
			get
			{
				return this.GetTable<CategoryData>();
			}
		}
		
		public System.Data.Linq.Table<LanguageData> LanguageDatas
		{
			get
			{
				return this.GetTable<LanguageData>();
			}
		}
		
		public System.Data.Linq.Table<LocationData> LocationDatas
		{
			get
			{
				return this.GetTable<LocationData>();
			}
		}
		
		public System.Data.Linq.Table<ProductData> ProductDatas
		{
			get
			{
				return this.GetTable<ProductData>();
			}
		}
		
		public System.Data.Linq.Table<ProductProduct> ProductProducts
		{
			get
			{
				return this.GetTable<ProductProduct>();
			}
		}
		
		public System.Data.Linq.Table<AllergenData> AllergenDatas
		{
			get
			{
				return this.GetTable<AllergenData>();
			}
		}
		
		public System.Data.Linq.Table<IngridientData> IngridientDatas
		{
			get
			{
				return this.GetTable<IngridientData>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_AllergenSymbol", IsComposable=true)]
		public IQueryable<v_AllergenSymbolResult> v_AllergenSymbol([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID)
		{
			return this.CreateMethodCallQuery<v_AllergenSymbolResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allergenID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_ProductSymbol", IsComposable=true)]
		public IQueryable<v_ProductSymbolResult> v_ProductSymbol([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		{
			return this.CreateMethodCallQuery<v_ProductSymbolResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_CategoryProducts", IsComposable=true)]
		public IQueryable<v_CategoryProductsResult> v_CategoryProducts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageID", DbType="Int")] System.Nullable<int> languageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID)
		{
			return this.CreateMethodCallQuery<v_CategoryProductsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), languageID, categoryID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_IngridientAllergen", IsComposable=true)]
		public IQueryable<v_IngridientAllergenResult> v_IngridientAllergen([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID)
		{
			return this.CreateMethodCallQuery<v_IngridientAllergenResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ingridientID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_ProductIngridients", IsComposable=true)]
		public IQueryable<v_ProductIngridientsResult> v_ProductIngridients([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		{
			return this.CreateMethodCallQuery<v_ProductIngridientsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_ProductMask", IsComposable=true)]
		public IQueryable<v_ProductMaskResult> v_ProductMask([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageID", DbType="Int")] System.Nullable<int> languageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="NChar(1)")] System.Nullable<char> productName)
		{
			return this.CreateMethodCallQuery<v_ProductMaskResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), languageID, productName);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductUpdate")]
		public ISingleResult<ProductUpdateResult> ProductUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductOdrinaryName", DbType="NVarChar(100)")] string productOdrinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCategoryID", DbType="Int")] System.Nullable<int> productCategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductStatus", DbType="SmallInt")] System.Nullable<short> productStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductWeight", DbType="Int")] System.Nullable<int> productWeight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductOdrinaryName", DbType="NVarChar(100)")] string original_ProductOdrinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductCategoryID", DbType="Int")] System.Nullable<int> original_ProductCategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductStatus", DbType="SmallInt")] System.Nullable<short> original_ProductStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductWeight", DbType="Int")] System.Nullable<int> original_ProductWeight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productOdrinaryName, productCategoryID, productStatus, productWeight, original_ProductID, original_ProductOdrinaryName, original_ProductCategoryID, original_ProductStatus, original_ProductWeight, productID);
			return ((ISingleResult<ProductUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenSymbolCreate")]
		public ISingleResult<AllergenSymbolCreateResult> AllergenSymbolCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolID", DbType="Int")] System.Nullable<int> symbolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allergenID, symbolID);
			return ((ISingleResult<AllergenSymbolCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenSymbolDelete")]
		public int AllergenSymbolDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenSymbolID", DbType="Int")] System.Nullable<int> original_AllergenSymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolID", DbType="Int")] System.Nullable<int> original_SymbolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_AllergenSymbolID, original_AllergenID, original_SymbolID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenSymbolRead")]
		public ISingleResult<AllergenSymbolReadResult> AllergenSymbolRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AllergenSymbolReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenSymbolUpdate")]
		public ISingleResult<AllergenSymbolUpdateResult> AllergenSymbolUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolID", DbType="Int")] System.Nullable<int> symbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenSymbolID", DbType="Int")] System.Nullable<int> original_AllergenSymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolID", DbType="Int")] System.Nullable<int> original_SymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenSymbolID", DbType="Int")] System.Nullable<int> allergenSymbolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allergenID, symbolID, original_AllergenSymbolID, original_AllergenID, original_SymbolID, allergenSymbolID);
			return ((ISingleResult<AllergenSymbolUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryCreate")]
		public ISingleResult<CategoryCreateResult> CategoryCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryOrdinaryName", DbType="NVarChar(100)")] string categoryOrdinaryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryOrdinaryName);
			return ((ISingleResult<CategoryCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryDelete")]
		public int CategoryDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryID", DbType="Int")] System.Nullable<int> original_CategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryOrdinaryName", DbType="NVarChar(100)")] string original_CategoryOrdinaryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_CategoryID, original_CategoryOrdinaryName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryLocalCreate")]
		public ISingleResult<CategoryLocalCreateResult> CategoryLocalCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryLocalName", DbType="NVarChar(100)")] string categoryLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryLocalToolTip", DbType="NVarChar(600)")] string categoryLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryLanguageID", DbType="Int")] System.Nullable<int> categoryLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryLocalName, categoryLocalToolTip, categoryID, categoryLanguageID);
			return ((ISingleResult<CategoryLocalCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryLocalDelete")]
		public int CategoryLocalDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLocalID", DbType="Int")] System.Nullable<int> original_CategoryLocalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLocalName", DbType="NVarChar(100)")] string original_CategoryLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLocalToolTip", DbType="NVarChar(600)")] string original_CategoryLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryID", DbType="Int")] System.Nullable<int> original_CategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLanguageID", DbType="Int")] System.Nullable<int> original_CategoryLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_CategoryLocalID, original_CategoryLocalName, original_CategoryLocalToolTip, original_CategoryID, original_CategoryLanguageID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryLocalRead")]
		public ISingleResult<CategoryLocalReadResult> CategoryLocalRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CategoryLocalReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryLocalUpdate")]
		public ISingleResult<CategoryLocalUpdateResult> CategoryLocalUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryLocalName", DbType="NVarChar(100)")] string categoryLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryLocalToolTip", DbType="NVarChar(600)")] string categoryLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryLanguageID", DbType="Int")] System.Nullable<int> categoryLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLocalID", DbType="Int")] System.Nullable<int> original_CategoryLocalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLocalName", DbType="NVarChar(100)")] string original_CategoryLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLocalToolTip", DbType="NVarChar(600)")] string original_CategoryLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryID", DbType="Int")] System.Nullable<int> original_CategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryLanguageID", DbType="Int")] System.Nullable<int> original_CategoryLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryLocalID", DbType="Int")] System.Nullable<int> categoryLocalID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryLocalName, categoryLocalToolTip, categoryID, categoryLanguageID, original_CategoryLocalID, original_CategoryLocalName, original_CategoryLocalToolTip, original_CategoryID, original_CategoryLanguageID, categoryLocalID);
			return ((ISingleResult<CategoryLocalUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryRead")]
		public ISingleResult<CategoryReadResult> CategoryRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CategoryReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CategoryUpdate")]
		public ISingleResult<CategoryUpdateResult> CategoryUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryOrdinaryName", DbType="NVarChar(100)")] string categoryOrdinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryID", DbType="Int")] System.Nullable<int> original_CategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_CategoryOrdinaryName", DbType="NVarChar(100)")] string original_CategoryOrdinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryOrdinaryName, original_CategoryID, original_CategoryOrdinaryName, categoryID);
			return ((ISingleResult<CategoryUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientAllergenCreate")]
		public ISingleResult<IngridientAllergenCreateResult> IngridientAllergenCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientFeelLimit", DbType="Int")] System.Nullable<int> ingridientFeelLimit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ingridientID, allergenID, ingridientFeelLimit);
			return ((ISingleResult<IngridientAllergenCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientAllergenDelete")]
		public int IngridientAllergenDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientAllergenID", DbType="Int")] System.Nullable<int> original_IngridientAllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientFeelLimit", DbType="Int")] System.Nullable<int> original_IngridientFeelLimit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_IngridientAllergenID, original_IngridientID, original_AllergenID, original_IngridientFeelLimit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientAllergenRead")]
		public ISingleResult<IngridientAllergenReadResult> IngridientAllergenRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<IngridientAllergenReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientAllergenUpdate")]
		public ISingleResult<IngridientAllergenUpdateResult> IngridientAllergenUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientFeelLimit", DbType="Int")] System.Nullable<int> ingridientFeelLimit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientAllergenID", DbType="Int")] System.Nullable<int> original_IngridientAllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientFeelLimit", DbType="Int")] System.Nullable<int> original_IngridientFeelLimit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientAllergenID", DbType="Int")] System.Nullable<int> ingridientAllergenID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ingridientID, allergenID, ingridientFeelLimit, original_IngridientAllergenID, original_IngridientID, original_AllergenID, original_IngridientFeelLimit, ingridientAllergenID);
			return ((ISingleResult<IngridientAllergenUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientCreate")]
		public ISingleResult<IngridientCreateResult> IngridientCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientOrdinaryName", DbType="NVarChar(100)")] string ingridientOrdinaryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ingridientOrdinaryName);
			return ((ISingleResult<IngridientCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientDelete")]
		public int IngridientDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientOrdinaryName", DbType="NVarChar(100)")] string original_IngridientOrdinaryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_IngridientID, original_IngridientOrdinaryName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientLocalCreate")]
		public ISingleResult<IngridientLocalCreateResult> IngridientLocalCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientName", DbType="NVarChar(100)")] string ingridientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IgrridientToolTip", DbType="NVarChar(600)")] string igrridientToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientLanguageID", DbType="Int")] System.Nullable<int> ingridientLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ingridientName, igrridientToolTip, ingridientID, ingridientLanguageID);
			return ((ISingleResult<IngridientLocalCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientLocalDelete")]
		public int IngridientLocalDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientLocalID", DbType="Int")] System.Nullable<int> original_IngridientLocalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientName", DbType="NVarChar(100)")] string original_IngridientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IgrridientToolTip", DbType="NVarChar(600)")] string original_IgrridientToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientLanguageID", DbType="Int")] System.Nullable<int> original_IngridientLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_IngridientLocalID, original_IngridientName, original_IgrridientToolTip, original_IngridientID, original_IngridientLanguageID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientLocalRead")]
		public ISingleResult<IngridientLocalReadResult> IngridientLocalRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<IngridientLocalReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientLocalUpdate")]
		public ISingleResult<IngridientLocalUpdateResult> IngridientLocalUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientName", DbType="NVarChar(100)")] string ingridientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IgrridientToolTip", DbType="NVarChar(600)")] string igrridientToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientLanguageID", DbType="Int")] System.Nullable<int> ingridientLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientLocalID", DbType="Int")] System.Nullable<int> original_IngridientLocalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientName", DbType="NVarChar(100)")] string original_IngridientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IgrridientToolTip", DbType="NVarChar(600)")] string original_IgrridientToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientLanguageID", DbType="Int")] System.Nullable<int> original_IngridientLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientLocalID", DbType="Int")] System.Nullable<int> ingridientLocalID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ingridientName, igrridientToolTip, ingridientID, ingridientLanguageID, original_IngridientLocalID, original_IngridientName, original_IgrridientToolTip, original_IngridientID, original_IngridientLanguageID, ingridientLocalID);
			return ((ISingleResult<IngridientLocalUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientRead")]
		public ISingleResult<IngridientReadResult> IngridientRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<IngridientReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IngridientUpdate")]
		public ISingleResult<IngridientUpdateResult> IngridientUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientOrdinaryName", DbType="NVarChar(100)")] string ingridientOrdinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientOrdinaryName", DbType="NVarChar(100)")] string original_IngridientOrdinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ingridientOrdinaryName, original_IngridientID, original_IngridientOrdinaryName, ingridientID);
			return ((ISingleResult<IngridientUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LanguageCreate")]
		public ISingleResult<LanguageCreateResult> LanguageCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageShortCode", DbType="NChar(2)")] string languageShortCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageEnglishName", DbType="NVarChar(100)")] string languageEnglishName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageGermanName", DbType="NVarChar(100)")] string languageGermanName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), languageShortCode, languageEnglishName, languageGermanName);
			return ((ISingleResult<LanguageCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LanguageDelete")]
		public int LanguageDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageID", DbType="Int")] System.Nullable<int> original_LanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageShortCode", DbType="NChar(2)")] string original_LanguageShortCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageEnglishName", DbType="NVarChar(100)")] string original_LanguageEnglishName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageGermanName", DbType="NVarChar(100)")] string original_LanguageGermanName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_LanguageID, original_LanguageShortCode, original_LanguageEnglishName, original_LanguageGermanName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LanguageRead")]
		public ISingleResult<LanguageReadResult> LanguageRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LanguageReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LanguageUpdate")]
		public ISingleResult<LanguageUpdateResult> LanguageUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageShortCode", DbType="NChar(2)")] string languageShortCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageEnglishName", DbType="NVarChar(100)")] string languageEnglishName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageGermanName", DbType="NVarChar(100)")] string languageGermanName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageID", DbType="Int")] System.Nullable<int> original_LanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageShortCode", DbType="NChar(2)")] string original_LanguageShortCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageEnglishName", DbType="NVarChar(100)")] string original_LanguageEnglishName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LanguageGermanName", DbType="NVarChar(100)")] string original_LanguageGermanName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageID", DbType="Int")] System.Nullable<int> languageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), languageShortCode, languageEnglishName, languageGermanName, original_LanguageID, original_LanguageShortCode, original_LanguageEnglishName, original_LanguageGermanName, languageID);
			return ((ISingleResult<LanguageUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LocationCreate")]
		public ISingleResult<LocationCreateResult> LocationCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCity", DbType="NVarChar(100)")] string locationCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationLocalName", DbType="NVarChar(10)")] string locationLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationPostalCode", DbType="NVarChar(8)")] string locationPostalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationStreet", DbType="NVarChar(200)")] string locationStreet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationLocalNumber", DbType="NChar(10)")] string locationLocalNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCountry", DbType="NVarChar(100)")] string locationCountry)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationCity, locationLocalName, locationPostalCode, locationStreet, locationLocalNumber, locationCountry);
			return ((ISingleResult<LocationCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LocationDelete")]
		public int LocationDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationID", DbType="Int")] System.Nullable<int> original_LocationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationCity", DbType="NVarChar(100)")] string original_LocationCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationLocalName", DbType="NVarChar(10)")] string original_LocationLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationPostalCode", DbType="NVarChar(8)")] string original_LocationPostalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationStreet", DbType="NVarChar(200)")] string original_LocationStreet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationLocalNumber", DbType="NChar(10)")] string original_LocationLocalNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationCountry", DbType="NVarChar(100)")] string original_LocationCountry)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_LocationID, original_LocationCity, original_LocationLocalName, original_LocationPostalCode, original_LocationStreet, original_LocationLocalNumber, original_LocationCountry);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LocationRead")]
		public ISingleResult<LocationReadResult> LocationRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LocationReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LocationUpdate")]
		public ISingleResult<LocationUpdateResult> LocationUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCity", DbType="NVarChar(100)")] string locationCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationLocalName", DbType="NVarChar(10)")] string locationLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationPostalCode", DbType="NVarChar(8)")] string locationPostalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationStreet", DbType="NVarChar(200)")] string locationStreet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationLocalNumber", DbType="NChar(10)")] string locationLocalNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCountry", DbType="NVarChar(100)")] string locationCountry, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationID", DbType="Int")] System.Nullable<int> original_LocationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationCity", DbType="NVarChar(100)")] string original_LocationCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationLocalName", DbType="NVarChar(10)")] string original_LocationLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationPostalCode", DbType="NVarChar(8)")] string original_LocationPostalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationStreet", DbType="NVarChar(200)")] string original_LocationStreet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationLocalNumber", DbType="NChar(10)")] string original_LocationLocalNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationCountry", DbType="NVarChar(100)")] string original_LocationCountry, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationID", DbType="Int")] System.Nullable<int> locationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationCity, locationLocalName, locationPostalCode, locationStreet, locationLocalNumber, locationCountry, original_LocationID, original_LocationCity, original_LocationLocalName, original_LocationPostalCode, original_LocationStreet, original_LocationLocalNumber, original_LocationCountry, locationID);
			return ((ISingleResult<LocationUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCreate")]
		public ISingleResult<ProductCreateResult> ProductCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductOdrinaryName", DbType="NVarChar(100)")] string productOdrinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCategoryID", DbType="Int")] System.Nullable<int> productCategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductStatus", DbType="SmallInt")] System.Nullable<short> productStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductWeight", DbType="Int")] System.Nullable<int> productWeight)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productOdrinaryName, productCategoryID, productStatus, productWeight);
			return ((ISingleResult<ProductCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductDelete")]
		public int ProductDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductOdrinaryName", DbType="NVarChar(100)")] string original_ProductOdrinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductCategoryID", DbType="Int")] System.Nullable<int> original_ProductCategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductStatus", DbType="SmallInt")] System.Nullable<short> original_ProductStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductWeight", DbType="Int")] System.Nullable<int> original_ProductWeight)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_ProductID, original_ProductOdrinaryName, original_ProductCategoryID, original_ProductStatus, original_ProductWeight);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductIngridientCreate")]
		public ISingleResult<ProductIngridientCreateResult> ProductIngridientCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientFeel", DbType="Int")] System.Nullable<int> ingridientFeel)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, ingridientID, ingridientFeel);
			return ((ISingleResult<ProductIngridientCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductIngridientDelete")]
		public int ProductIngridientDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductIngridientID", DbType="Int")] System.Nullable<int> original_ProductIngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientFeel", DbType="Int")] System.Nullable<int> original_IngridientFeel)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_ProductIngridientID, original_ProductID, original_IngridientID, original_IngridientFeel);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductIngridientRead")]
		public ISingleResult<ProductIngridientReadResult> ProductIngridientRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductIngridientReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductIngridientUpdate")]
		public ISingleResult<ProductIngridientUpdateResult> ProductIngridientUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientID", DbType="Int")] System.Nullable<int> ingridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IngridientFeel", DbType="Int")] System.Nullable<int> ingridientFeel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductIngridientID", DbType="Int")] System.Nullable<int> original_ProductIngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientID", DbType="Int")] System.Nullable<int> original_IngridientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_IngridientFeel", DbType="Int")] System.Nullable<int> original_IngridientFeel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductIngridientID", DbType="Int")] System.Nullable<int> productIngridientID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, ingridientID, ingridientFeel, original_ProductIngridientID, original_ProductID, original_IngridientID, original_IngridientFeel, productIngridientID);
			return ((ISingleResult<ProductIngridientUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocalCreate")]
		public ISingleResult<ProductLocalCreateResult> ProductLocalCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="NVarChar(100)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductToolTip", DbType="NVarChar(600)")] string productToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductLanguageID", DbType="Int")] System.Nullable<int> productLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productName, productToolTip, productID, productLanguageID);
			return ((ISingleResult<ProductLocalCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocalDelete")]
		public int ProductLocalDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductLocalID", DbType="Int")] System.Nullable<int> original_ProductLocalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductName", DbType="NVarChar(100)")] string original_ProductName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductToolTip", DbType="NVarChar(600)")] string original_ProductToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductLanguageID", DbType="Int")] System.Nullable<int> original_ProductLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_ProductLocalID, original_ProductName, original_ProductToolTip, original_ProductID, original_ProductLanguageID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocalRead")]
		public ISingleResult<ProductLocalReadResult> ProductLocalRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductLocalReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocalUpdate")]
		public ISingleResult<ProductLocalUpdateResult> ProductLocalUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="NVarChar(100)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductToolTip", DbType="NVarChar(600)")] string productToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductLanguageID", DbType="Int")] System.Nullable<int> productLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductLocalID", DbType="Int")] System.Nullable<int> original_ProductLocalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductName", DbType="NVarChar(100)")] string original_ProductName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductToolTip", DbType="NVarChar(600)")] string original_ProductToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductLanguageID", DbType="Int")] System.Nullable<int> original_ProductLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductLocalID", DbType="Int")] System.Nullable<int> productLocalID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productName, productToolTip, productID, productLanguageID, original_ProductLocalID, original_ProductName, original_ProductToolTip, original_ProductID, original_ProductLanguageID, productLocalID);
			return ((ISingleResult<ProductLocalUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocationCreate")]
		public ISingleResult<ProductLocationCreateResult> ProductLocationCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationID", DbType="Int")] System.Nullable<int> locationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, locationID);
			return ((ISingleResult<ProductLocationCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocationDelete")]
		public int ProductLocationDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductLocationID", DbType="Int")] System.Nullable<int> original_ProductLocationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationID", DbType="Int")] System.Nullable<int> original_LocationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_ProductLocationID, original_ProductID, original_LocationID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocationRead")]
		public ISingleResult<ProductLocationReadResult> ProductLocationRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductLocationReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductLocationUpdate")]
		public ISingleResult<ProductLocationUpdateResult> ProductLocationUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationID", DbType="Int")] System.Nullable<int> locationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductLocationID", DbType="Int")] System.Nullable<int> original_ProductLocationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_LocationID", DbType="Int")] System.Nullable<int> original_LocationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductLocationID", DbType="Int")] System.Nullable<int> productLocationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, locationID, original_ProductLocationID, original_ProductID, original_LocationID, productLocationID);
			return ((ISingleResult<ProductLocationUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductProductCreate")]
		public ISingleResult<ProductProductCreateResult> ProductProductCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductParentID", DbType="Int")] System.Nullable<int> productParentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductChildID", DbType="Int")] System.Nullable<int> productChildID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productParentID, productChildID);
			return ((ISingleResult<ProductProductCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductProductDelete")]
		public int ProductProductDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductProductsID", DbType="Int")] System.Nullable<int> original_ProductProductsID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductParentID", DbType="Int")] System.Nullable<int> original_ProductParentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductChildID", DbType="Int")] System.Nullable<int> original_ProductChildID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_ProductProductsID, original_ProductParentID, original_ProductChildID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductProductRead")]
		public ISingleResult<ProductProductReadResult> ProductProductRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductProductReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductProductUpdate")]
		public ISingleResult<ProductProductUpdateResult> ProductProductUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductParentID", DbType="Int")] System.Nullable<int> productParentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductChildID", DbType="Int")] System.Nullable<int> productChildID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductProductsID", DbType="Int")] System.Nullable<int> original_ProductProductsID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductParentID", DbType="Int")] System.Nullable<int> original_ProductParentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductChildID", DbType="Int")] System.Nullable<int> original_ProductChildID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductProductsID", DbType="Int")] System.Nullable<int> productProductsID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productParentID, productChildID, original_ProductProductsID, original_ProductParentID, original_ProductChildID, productProductsID);
			return ((ISingleResult<ProductProductUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductRead")]
		public ISingleResult<ProductReadResult> ProductRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductSymbolCreate")]
		public ISingleResult<ProductSymbolCreateResult> ProductSymbolCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolID", DbType="Int")] System.Nullable<int> symbolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, symbolID);
			return ((ISingleResult<ProductSymbolCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductSymbolDelete")]
		public int ProductSymbolDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductSymbolID", DbType="Int")] System.Nullable<int> original_ProductSymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolID", DbType="Int")] System.Nullable<int> original_SymbolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_ProductSymbolID, original_ProductID, original_SymbolID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductSymbolRead")]
		public ISingleResult<ProductSymbolReadResult> ProductSymbolRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductSymbolReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductSymbolUpdate")]
		public ISingleResult<ProductSymbolUpdateResult> ProductSymbolUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolID", DbType="Int")] System.Nullable<int> symbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductSymbolID", DbType="Int")] System.Nullable<int> original_ProductSymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ProductID", DbType="Int")] System.Nullable<int> original_ProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolID", DbType="Int")] System.Nullable<int> original_SymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductSymbolID", DbType="Int")] System.Nullable<int> productSymbolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, symbolID, original_ProductSymbolID, original_ProductID, original_SymbolID, productSymbolID);
			return ((ISingleResult<ProductSymbolUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SymbolCreate")]
		public ISingleResult<SymbolCreateResult> SymbolCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolImage", DbType="Image")] System.Data.Linq.Binary symbolImage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolArt", DbType="SmallInt")] System.Nullable<short> symbolArt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), symbolImage, symbolArt);
			return ((ISingleResult<SymbolCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SymbolUpdate")]
		public ISingleResult<SymbolUpdateResult> SymbolUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolImage", DbType="Image")] System.Data.Linq.Binary symbolImage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolArt", DbType="SmallInt")] System.Nullable<short> symbolArt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolID", DbType="Int")] System.Nullable<int> original_SymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolArt", DbType="SmallInt")] System.Nullable<short> original_SymbolArt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SymbolID", DbType="Int")] System.Nullable<int> symbolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), symbolImage, symbolArt, original_SymbolID, original_SymbolArt, symbolID);
			return ((ISingleResult<SymbolUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SymbolDelete")]
		public int SymbolDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolID", DbType="Int")] System.Nullable<int> original_SymbolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_SymbolArt", DbType="SmallInt")] System.Nullable<short> original_SymbolArt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_SymbolID, original_SymbolArt);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SymbolRead")]
		public ISingleResult<SymbolReadResult> SymbolRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SymbolReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenCreate")]
		public ISingleResult<AllergenCreateResult> AllergenCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenOrdinaryName", DbType="NVarChar(100)")] string allergenOrdinaryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allergenOrdinaryName);
			return ((ISingleResult<AllergenCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenRead")]
		public ISingleResult<AllergenReadResult> AllergenRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AllergenReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenDelete")]
		public int AllergenDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenOrdinaryName", DbType="NVarChar(100)")] string original_AllergenOrdinaryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_AllergenID, original_AllergenOrdinaryName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenLocalCreate")]
		public ISingleResult<AllergenLocalCreateResult> AllergenLocalCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenLocalName", DbType="NVarChar(100)")] string allergenLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenLocalToolTip", DbType="NVarChar(600)")] string allergenLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenLanguageID", DbType="Int")] System.Nullable<int> allergenLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allergenLocalName, allergenLocalToolTip, allergenID, allergenLanguageID);
			return ((ISingleResult<AllergenLocalCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenLocalDelete")]
		public int AllergenLocalDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLocalD", DbType="Int")] System.Nullable<int> original_AllergenLocalD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLocalName", DbType="NVarChar(100)")] string original_AllergenLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLocalToolTip", DbType="NVarChar(600)")] string original_AllergenLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLanguageID", DbType="Int")] System.Nullable<int> original_AllergenLanguageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_AllergenLocalD, original_AllergenLocalName, original_AllergenLocalToolTip, original_AllergenID, original_AllergenLanguageID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenLocalRead")]
		public ISingleResult<AllergenLocalReadResult> AllergenLocalRead()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AllergenLocalReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenLocalUpdate")]
		public ISingleResult<AllergenLocalUpdateResult> AllergenLocalUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenLocalName", DbType="NVarChar(100)")] string allergenLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenLocalToolTip", DbType="NVarChar(600)")] string allergenLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenLanguageID", DbType="Int")] System.Nullable<int> allergenLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLocalD", DbType="Int")] System.Nullable<int> original_AllergenLocalD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLocalName", DbType="NVarChar(100)")] string original_AllergenLocalName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLocalToolTip", DbType="NVarChar(600)")] string original_AllergenLocalToolTip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenLanguageID", DbType="Int")] System.Nullable<int> original_AllergenLanguageID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenLocalD", DbType="Int")] System.Nullable<int> allergenLocalD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allergenLocalName, allergenLocalToolTip, allergenID, allergenLanguageID, original_AllergenLocalD, original_AllergenLocalName, original_AllergenLocalToolTip, original_AllergenID, original_AllergenLanguageID, allergenLocalD);
			return ((ISingleResult<AllergenLocalUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllergenUpdate")]
		public ISingleResult<AllergenUpdateResult> AllergenUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenOrdinaryName", DbType="NVarChar(100)")] string allergenOrdinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenID", DbType="Int")] System.Nullable<int> original_AllergenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_AllergenOrdinaryName", DbType="NVarChar(100)")] string original_AllergenOrdinaryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllergenID", DbType="Int")] System.Nullable<int> allergenID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allergenOrdinaryName, original_AllergenID, original_AllergenOrdinaryName, allergenID);
			return ((ISingleResult<AllergenUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_ProductAllergens", IsComposable=true)]
		public IQueryable<v_ProductAllergensResult> v_ProductAllergens([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationID", DbType="Int")] System.Nullable<int> locationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageID", DbType="Int")] System.Nullable<int> languageID)
		{
			return this.CreateMethodCallQuery<v_ProductAllergensResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, locationID, categoryID, languageID);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Allergens")]
	public partial class Allergen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllergenID;
		
		private string _AllergenOrdinaryName;
		
		private EntitySet<AllergensLocal> _AllergensLocals;
		
		private EntitySet<AllergensSymbol> _AllergensSymbols;
		
		private EntitySet<IngridientsAllergen> _IngridientsAllergens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllergenIDChanging(int value);
    partial void OnAllergenIDChanged();
    partial void OnAllergenOrdinaryNameChanging(string value);
    partial void OnAllergenOrdinaryNameChanged();
    #endregion
		
		public Allergen()
		{
			this._AllergensLocals = new EntitySet<AllergensLocal>(new Action<AllergensLocal>(this.attach_AllergensLocals), new Action<AllergensLocal>(this.detach_AllergensLocals));
			this._AllergensSymbols = new EntitySet<AllergensSymbol>(new Action<AllergensSymbol>(this.attach_AllergensSymbols), new Action<AllergensSymbol>(this.detach_AllergensSymbols));
			this._IngridientsAllergens = new EntitySet<IngridientsAllergen>(new Action<IngridientsAllergen>(this.attach_IngridientsAllergens), new Action<IngridientsAllergen>(this.detach_IngridientsAllergens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this.OnAllergenIDChanging(value);
					this.SendPropertyChanging();
					this._AllergenID = value;
					this.SendPropertyChanged("AllergenID");
					this.OnAllergenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenOrdinaryName
		{
			get
			{
				return this._AllergenOrdinaryName;
			}
			set
			{
				if ((this._AllergenOrdinaryName != value))
				{
					this.OnAllergenOrdinaryNameChanging(value);
					this.SendPropertyChanging();
					this._AllergenOrdinaryName = value;
					this.SendPropertyChanged("AllergenOrdinaryName");
					this.OnAllergenOrdinaryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allergen_AllergensLocal", Storage="_AllergensLocals", ThisKey="AllergenID", OtherKey="AllergenID")]
		public EntitySet<AllergensLocal> AllergensLocals
		{
			get
			{
				return this._AllergensLocals;
			}
			set
			{
				this._AllergensLocals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allergen_AllergensSymbol", Storage="_AllergensSymbols", ThisKey="AllergenID", OtherKey="AllergenID")]
		public EntitySet<AllergensSymbol> AllergensSymbols
		{
			get
			{
				return this._AllergensSymbols;
			}
			set
			{
				this._AllergensSymbols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allergen_IngridientsAllergen", Storage="_IngridientsAllergens", ThisKey="AllergenID", OtherKey="AllergenID")]
		public EntitySet<IngridientsAllergen> IngridientsAllergens
		{
			get
			{
				return this._IngridientsAllergens;
			}
			set
			{
				this._IngridientsAllergens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllergensLocals(AllergensLocal entity)
		{
			this.SendPropertyChanging();
			entity.Allergen = this;
		}
		
		private void detach_AllergensLocals(AllergensLocal entity)
		{
			this.SendPropertyChanging();
			entity.Allergen = null;
		}
		
		private void attach_AllergensSymbols(AllergensSymbol entity)
		{
			this.SendPropertyChanging();
			entity.Allergen = this;
		}
		
		private void detach_AllergensSymbols(AllergensSymbol entity)
		{
			this.SendPropertyChanging();
			entity.Allergen = null;
		}
		
		private void attach_IngridientsAllergens(IngridientsAllergen entity)
		{
			this.SendPropertyChanging();
			entity.Allergen = this;
		}
		
		private void detach_IngridientsAllergens(IngridientsAllergen entity)
		{
			this.SendPropertyChanging();
			entity.Allergen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Symbols")]
	public partial class Symbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		private short _SymbolArt;
		
		private EntitySet<AllergensSymbol> _AllergensSymbols;
		
		private EntitySet<ProductsSymbol> _ProductsSymbols;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSymbolIDChanging(int value);
    partial void OnSymbolIDChanged();
    partial void OnSymbolImageChanging(System.Data.Linq.Binary value);
    partial void OnSymbolImageChanged();
    partial void OnSymbolArtChanging(short value);
    partial void OnSymbolArtChanged();
    #endregion
		
		public Symbol()
		{
			this._AllergensSymbols = new EntitySet<AllergensSymbol>(new Action<AllergensSymbol>(this.attach_AllergensSymbols), new Action<AllergensSymbol>(this.detach_AllergensSymbols));
			this._ProductsSymbols = new EntitySet<ProductsSymbol>(new Action<ProductsSymbol>(this.attach_ProductsSymbols), new Action<ProductsSymbol>(this.detach_ProductsSymbols));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this.OnSymbolIDChanging(value);
					this.SendPropertyChanging();
					this._SymbolID = value;
					this.SendPropertyChanged("SymbolID");
					this.OnSymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this.OnSymbolImageChanging(value);
					this.SendPropertyChanging();
					this._SymbolImage = value;
					this.SendPropertyChanged("SymbolImage");
					this.OnSymbolImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolArt", DbType="SmallInt NOT NULL")]
		public short SymbolArt
		{
			get
			{
				return this._SymbolArt;
			}
			set
			{
				if ((this._SymbolArt != value))
				{
					this.OnSymbolArtChanging(value);
					this.SendPropertyChanging();
					this._SymbolArt = value;
					this.SendPropertyChanged("SymbolArt");
					this.OnSymbolArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Symbol_AllergensSymbol", Storage="_AllergensSymbols", ThisKey="SymbolID", OtherKey="SymbolID")]
		public EntitySet<AllergensSymbol> AllergensSymbols
		{
			get
			{
				return this._AllergensSymbols;
			}
			set
			{
				this._AllergensSymbols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Symbol_ProductsSymbol", Storage="_ProductsSymbols", ThisKey="SymbolID", OtherKey="ProductID")]
		public EntitySet<ProductsSymbol> ProductsSymbols
		{
			get
			{
				return this._ProductsSymbols;
			}
			set
			{
				this._ProductsSymbols.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllergensSymbols(AllergensSymbol entity)
		{
			this.SendPropertyChanging();
			entity.Symbol = this;
		}
		
		private void detach_AllergensSymbols(AllergensSymbol entity)
		{
			this.SendPropertyChanging();
			entity.Symbol = null;
		}
		
		private void attach_ProductsSymbols(ProductsSymbol entity)
		{
			this.SendPropertyChanging();
			entity.Symbol = this;
		}
		
		private void detach_ProductsSymbols(ProductsSymbol entity)
		{
			this.SendPropertyChanging();
			entity.Symbol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllergensLocals")]
	public partial class AllergensLocal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllergenLocalD;
		
		private string _AllergenLocalName;
		
		private string _AllergenLocalToolTip;
		
		private int _AllergenID;
		
		private int _AllergenLanguageID;
		
		private EntityRef<Allergen> _Allergen;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllergenLocalDChanging(int value);
    partial void OnAllergenLocalDChanged();
    partial void OnAllergenLocalNameChanging(string value);
    partial void OnAllergenLocalNameChanged();
    partial void OnAllergenLocalToolTipChanging(string value);
    partial void OnAllergenLocalToolTipChanged();
    partial void OnAllergenIDChanging(int value);
    partial void OnAllergenIDChanged();
    partial void OnAllergenLanguageIDChanging(int value);
    partial void OnAllergenLanguageIDChanged();
    #endregion
		
		public AllergensLocal()
		{
			this._Allergen = default(EntityRef<Allergen>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AllergenLocalD
		{
			get
			{
				return this._AllergenLocalD;
			}
			set
			{
				if ((this._AllergenLocalD != value))
				{
					this.OnAllergenLocalDChanging(value);
					this.SendPropertyChanging();
					this._AllergenLocalD = value;
					this.SendPropertyChanged("AllergenLocalD");
					this.OnAllergenLocalDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenLocalName
		{
			get
			{
				return this._AllergenLocalName;
			}
			set
			{
				if ((this._AllergenLocalName != value))
				{
					this.OnAllergenLocalNameChanging(value);
					this.SendPropertyChanging();
					this._AllergenLocalName = value;
					this.SendPropertyChanged("AllergenLocalName");
					this.OnAllergenLocalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string AllergenLocalToolTip
		{
			get
			{
				return this._AllergenLocalToolTip;
			}
			set
			{
				if ((this._AllergenLocalToolTip != value))
				{
					this.OnAllergenLocalToolTipChanging(value);
					this.SendPropertyChanging();
					this._AllergenLocalToolTip = value;
					this.SendPropertyChanged("AllergenLocalToolTip");
					this.OnAllergenLocalToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					if (this._Allergen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllergenIDChanging(value);
					this.SendPropertyChanging();
					this._AllergenID = value;
					this.SendPropertyChanged("AllergenID");
					this.OnAllergenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLanguageID", DbType="Int NOT NULL")]
		public int AllergenLanguageID
		{
			get
			{
				return this._AllergenLanguageID;
			}
			set
			{
				if ((this._AllergenLanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllergenLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._AllergenLanguageID = value;
					this.SendPropertyChanged("AllergenLanguageID");
					this.OnAllergenLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allergen_AllergensLocal", Storage="_Allergen", ThisKey="AllergenID", OtherKey="AllergenID", IsForeignKey=true)]
		public Allergen Allergen
		{
			get
			{
				return this._Allergen.Entity;
			}
			set
			{
				Allergen previousValue = this._Allergen.Entity;
				if (((previousValue != value) 
							|| (this._Allergen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Allergen.Entity = null;
						previousValue.AllergensLocals.Remove(this);
					}
					this._Allergen.Entity = value;
					if ((value != null))
					{
						value.AllergensLocals.Add(this);
						this._AllergenID = value.AllergenID;
					}
					else
					{
						this._AllergenID = default(int);
					}
					this.SendPropertyChanged("Allergen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AllergensLocal", Storage="_Language", ThisKey="AllergenLanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.AllergensLocals.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.AllergensLocals.Add(this);
						this._AllergenLanguageID = value.LanguageID;
					}
					else
					{
						this._AllergenLanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllergensSymbols")]
	public partial class AllergensSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllergenSymbolID;
		
		private int _AllergenID;
		
		private int _SymbolID;
		
		private EntityRef<Allergen> _Allergen;
		
		private EntityRef<Symbol> _Symbol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllergenSymbolIDChanging(int value);
    partial void OnAllergenSymbolIDChanged();
    partial void OnAllergenIDChanging(int value);
    partial void OnAllergenIDChanged();
    partial void OnSymbolIDChanging(int value);
    partial void OnSymbolIDChanged();
    #endregion
		
		public AllergensSymbol()
		{
			this._Allergen = default(EntityRef<Allergen>);
			this._Symbol = default(EntityRef<Symbol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenSymbolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AllergenSymbolID
		{
			get
			{
				return this._AllergenSymbolID;
			}
			set
			{
				if ((this._AllergenSymbolID != value))
				{
					this.OnAllergenSymbolIDChanging(value);
					this.SendPropertyChanging();
					this._AllergenSymbolID = value;
					this.SendPropertyChanged("AllergenSymbolID");
					this.OnAllergenSymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					if (this._Allergen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllergenIDChanging(value);
					this.SendPropertyChanging();
					this._AllergenID = value;
					this.SendPropertyChanged("AllergenID");
					this.OnAllergenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					if (this._Symbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIDChanging(value);
					this.SendPropertyChanging();
					this._SymbolID = value;
					this.SendPropertyChanged("SymbolID");
					this.OnSymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allergen_AllergensSymbol", Storage="_Allergen", ThisKey="AllergenID", OtherKey="AllergenID", IsForeignKey=true)]
		public Allergen Allergen
		{
			get
			{
				return this._Allergen.Entity;
			}
			set
			{
				Allergen previousValue = this._Allergen.Entity;
				if (((previousValue != value) 
							|| (this._Allergen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Allergen.Entity = null;
						previousValue.AllergensSymbols.Remove(this);
					}
					this._Allergen.Entity = value;
					if ((value != null))
					{
						value.AllergensSymbols.Add(this);
						this._AllergenID = value.AllergenID;
					}
					else
					{
						this._AllergenID = default(int);
					}
					this.SendPropertyChanged("Allergen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Symbol_AllergensSymbol", Storage="_Symbol", ThisKey="SymbolID", OtherKey="SymbolID", IsForeignKey=true)]
		public Symbol Symbol
		{
			get
			{
				return this._Symbol.Entity;
			}
			set
			{
				Symbol previousValue = this._Symbol.Entity;
				if (((previousValue != value) 
							|| (this._Symbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Symbol.Entity = null;
						previousValue.AllergensSymbols.Remove(this);
					}
					this._Symbol.Entity = value;
					if ((value != null))
					{
						value.AllergensSymbols.Add(this);
						this._SymbolID = value.SymbolID;
					}
					else
					{
						this._SymbolID = default(int);
					}
					this.SendPropertyChanged("Symbol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private string _CategoryOrdinaryName;
		
		private EntitySet<CategoriesLocal> _CategoriesLocals;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryOrdinaryNameChanging(string value);
    partial void OnCategoryOrdinaryNameChanged();
    #endregion
		
		public Category()
		{
			this._CategoriesLocals = new EntitySet<CategoriesLocal>(new Action<CategoriesLocal>(this.attach_CategoriesLocals), new Action<CategoriesLocal>(this.detach_CategoriesLocals));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryOrdinaryName
		{
			get
			{
				return this._CategoryOrdinaryName;
			}
			set
			{
				if ((this._CategoryOrdinaryName != value))
				{
					this.OnCategoryOrdinaryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryOrdinaryName = value;
					this.SendPropertyChanged("CategoryOrdinaryName");
					this.OnCategoryOrdinaryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoriesLocal", Storage="_CategoriesLocals", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<CategoriesLocal> CategoriesLocals
		{
			get
			{
				return this._CategoriesLocals;
			}
			set
			{
				this._CategoriesLocals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="CategoryID", OtherKey="ProductCategoryID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CategoriesLocals(CategoriesLocal entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_CategoriesLocals(CategoriesLocal entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoriesLocals")]
	public partial class CategoriesLocal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryLocalID;
		
		private string _CategoryLocalName;
		
		private string _CategoryLocalToolTip;
		
		private int _CategoryID;
		
		private int _CategoryLanguageID;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryLocalIDChanging(int value);
    partial void OnCategoryLocalIDChanged();
    partial void OnCategoryLocalNameChanging(string value);
    partial void OnCategoryLocalNameChanged();
    partial void OnCategoryLocalToolTipChanging(string value);
    partial void OnCategoryLocalToolTipChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryLanguageIDChanging(int value);
    partial void OnCategoryLanguageIDChanged();
    #endregion
		
		public CategoriesLocal()
		{
			this._Category = default(EntityRef<Category>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryLocalID
		{
			get
			{
				return this._CategoryLocalID;
			}
			set
			{
				if ((this._CategoryLocalID != value))
				{
					this.OnCategoryLocalIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryLocalID = value;
					this.SendPropertyChanged("CategoryLocalID");
					this.OnCategoryLocalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryLocalName
		{
			get
			{
				return this._CategoryLocalName;
			}
			set
			{
				if ((this._CategoryLocalName != value))
				{
					this.OnCategoryLocalNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryLocalName = value;
					this.SendPropertyChanged("CategoryLocalName");
					this.OnCategoryLocalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string CategoryLocalToolTip
		{
			get
			{
				return this._CategoryLocalToolTip;
			}
			set
			{
				if ((this._CategoryLocalToolTip != value))
				{
					this.OnCategoryLocalToolTipChanging(value);
					this.SendPropertyChanging();
					this._CategoryLocalToolTip = value;
					this.SendPropertyChanged("CategoryLocalToolTip");
					this.OnCategoryLocalToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLanguageID", DbType="Int NOT NULL")]
		public int CategoryLanguageID
		{
			get
			{
				return this._CategoryLanguageID;
			}
			set
			{
				if ((this._CategoryLanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryLanguageID = value;
					this.SendPropertyChanged("CategoryLanguageID");
					this.OnCategoryLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoriesLocal", Storage="_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.CategoriesLocals.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.CategoriesLocals.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CategoriesLocal", Storage="_Language", ThisKey="CategoryLanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CategoriesLocals.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CategoriesLocals.Add(this);
						this._CategoryLanguageID = value.LanguageID;
					}
					else
					{
						this._CategoryLanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingridients")]
	public partial class Ingridient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IngridientID;
		
		private string _IngridientOrdinaryName;
		
		private EntitySet<IngridientsAllergen> _IngridientsAllergens;
		
		private EntitySet<IngridientsLocal> _IngridientsLocals;
		
		private EntitySet<ProductsIngridient> _ProductsIngridients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIngridientIDChanging(int value);
    partial void OnIngridientIDChanged();
    partial void OnIngridientOrdinaryNameChanging(string value);
    partial void OnIngridientOrdinaryNameChanged();
    #endregion
		
		public Ingridient()
		{
			this._IngridientsAllergens = new EntitySet<IngridientsAllergen>(new Action<IngridientsAllergen>(this.attach_IngridientsAllergens), new Action<IngridientsAllergen>(this.detach_IngridientsAllergens));
			this._IngridientsLocals = new EntitySet<IngridientsLocal>(new Action<IngridientsLocal>(this.attach_IngridientsLocals), new Action<IngridientsLocal>(this.detach_IngridientsLocals));
			this._ProductsIngridients = new EntitySet<ProductsIngridient>(new Action<ProductsIngridient>(this.attach_ProductsIngridients), new Action<ProductsIngridient>(this.detach_ProductsIngridients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this.OnIngridientIDChanging(value);
					this.SendPropertyChanging();
					this._IngridientID = value;
					this.SendPropertyChanged("IngridientID");
					this.OnIngridientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientOrdinaryName
		{
			get
			{
				return this._IngridientOrdinaryName;
			}
			set
			{
				if ((this._IngridientOrdinaryName != value))
				{
					this.OnIngridientOrdinaryNameChanging(value);
					this.SendPropertyChanging();
					this._IngridientOrdinaryName = value;
					this.SendPropertyChanged("IngridientOrdinaryName");
					this.OnIngridientOrdinaryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingridient_IngridientsAllergen", Storage="_IngridientsAllergens", ThisKey="IngridientID", OtherKey="IngridientID")]
		public EntitySet<IngridientsAllergen> IngridientsAllergens
		{
			get
			{
				return this._IngridientsAllergens;
			}
			set
			{
				this._IngridientsAllergens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingridient_IngridientsLocal", Storage="_IngridientsLocals", ThisKey="IngridientID", OtherKey="IngridientID")]
		public EntitySet<IngridientsLocal> IngridientsLocals
		{
			get
			{
				return this._IngridientsLocals;
			}
			set
			{
				this._IngridientsLocals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingridient_ProductsIngridient", Storage="_ProductsIngridients", ThisKey="IngridientID", OtherKey="IngridientID")]
		public EntitySet<ProductsIngridient> ProductsIngridients
		{
			get
			{
				return this._ProductsIngridients;
			}
			set
			{
				this._ProductsIngridients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IngridientsAllergens(IngridientsAllergen entity)
		{
			this.SendPropertyChanging();
			entity.Ingridient = this;
		}
		
		private void detach_IngridientsAllergens(IngridientsAllergen entity)
		{
			this.SendPropertyChanging();
			entity.Ingridient = null;
		}
		
		private void attach_IngridientsLocals(IngridientsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Ingridient = this;
		}
		
		private void detach_IngridientsLocals(IngridientsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Ingridient = null;
		}
		
		private void attach_ProductsIngridients(ProductsIngridient entity)
		{
			this.SendPropertyChanging();
			entity.Ingridient = this;
		}
		
		private void detach_ProductsIngridients(ProductsIngridient entity)
		{
			this.SendPropertyChanging();
			entity.Ingridient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IngridientsAllergens")]
	public partial class IngridientsAllergen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IngridientAllergenID;
		
		private int _IngridientID;
		
		private int _AllergenID;
		
		private int _IngridientFeelLimit;
		
		private EntityRef<Allergen> _Allergen;
		
		private EntityRef<Ingridient> _Ingridient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIngridientAllergenIDChanging(int value);
    partial void OnIngridientAllergenIDChanged();
    partial void OnIngridientIDChanging(int value);
    partial void OnIngridientIDChanged();
    partial void OnAllergenIDChanging(int value);
    partial void OnAllergenIDChanged();
    partial void OnIngridientFeelLimitChanging(int value);
    partial void OnIngridientFeelLimitChanged();
    #endregion
		
		public IngridientsAllergen()
		{
			this._Allergen = default(EntityRef<Allergen>);
			this._Ingridient = default(EntityRef<Ingridient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientAllergenID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IngridientAllergenID
		{
			get
			{
				return this._IngridientAllergenID;
			}
			set
			{
				if ((this._IngridientAllergenID != value))
				{
					this.OnIngridientAllergenIDChanging(value);
					this.SendPropertyChanging();
					this._IngridientAllergenID = value;
					this.SendPropertyChanged("IngridientAllergenID");
					this.OnIngridientAllergenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					if (this._Ingridient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngridientIDChanging(value);
					this.SendPropertyChanging();
					this._IngridientID = value;
					this.SendPropertyChanged("IngridientID");
					this.OnIngridientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					if (this._Allergen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllergenIDChanging(value);
					this.SendPropertyChanging();
					this._AllergenID = value;
					this.SendPropertyChanged("AllergenID");
					this.OnAllergenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeelLimit", DbType="Int NOT NULL")]
		public int IngridientFeelLimit
		{
			get
			{
				return this._IngridientFeelLimit;
			}
			set
			{
				if ((this._IngridientFeelLimit != value))
				{
					this.OnIngridientFeelLimitChanging(value);
					this.SendPropertyChanging();
					this._IngridientFeelLimit = value;
					this.SendPropertyChanged("IngridientFeelLimit");
					this.OnIngridientFeelLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allergen_IngridientsAllergen", Storage="_Allergen", ThisKey="AllergenID", OtherKey="AllergenID", IsForeignKey=true)]
		public Allergen Allergen
		{
			get
			{
				return this._Allergen.Entity;
			}
			set
			{
				Allergen previousValue = this._Allergen.Entity;
				if (((previousValue != value) 
							|| (this._Allergen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Allergen.Entity = null;
						previousValue.IngridientsAllergens.Remove(this);
					}
					this._Allergen.Entity = value;
					if ((value != null))
					{
						value.IngridientsAllergens.Add(this);
						this._AllergenID = value.AllergenID;
					}
					else
					{
						this._AllergenID = default(int);
					}
					this.SendPropertyChanged("Allergen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingridient_IngridientsAllergen", Storage="_Ingridient", ThisKey="IngridientID", OtherKey="IngridientID", IsForeignKey=true)]
		public Ingridient Ingridient
		{
			get
			{
				return this._Ingridient.Entity;
			}
			set
			{
				Ingridient previousValue = this._Ingridient.Entity;
				if (((previousValue != value) 
							|| (this._Ingridient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingridient.Entity = null;
						previousValue.IngridientsAllergens.Remove(this);
					}
					this._Ingridient.Entity = value;
					if ((value != null))
					{
						value.IngridientsAllergens.Add(this);
						this._IngridientID = value.IngridientID;
					}
					else
					{
						this._IngridientID = default(int);
					}
					this.SendPropertyChanged("Ingridient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IngridientsLocals")]
	public partial class IngridientsLocal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IngridientLocalID;
		
		private string _IngridientName;
		
		private string _IgrridientToolTip;
		
		private int _IngridientID;
		
		private int _IngridientLanguageID;
		
		private EntityRef<Ingridient> _Ingridient;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIngridientLocalIDChanging(int value);
    partial void OnIngridientLocalIDChanged();
    partial void OnIngridientNameChanging(string value);
    partial void OnIngridientNameChanged();
    partial void OnIgrridientToolTipChanging(string value);
    partial void OnIgrridientToolTipChanged();
    partial void OnIngridientIDChanging(int value);
    partial void OnIngridientIDChanged();
    partial void OnIngridientLanguageIDChanging(int value);
    partial void OnIngridientLanguageIDChanged();
    #endregion
		
		public IngridientsLocal()
		{
			this._Ingridient = default(EntityRef<Ingridient>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLocalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IngridientLocalID
		{
			get
			{
				return this._IngridientLocalID;
			}
			set
			{
				if ((this._IngridientLocalID != value))
				{
					this.OnIngridientLocalIDChanging(value);
					this.SendPropertyChanging();
					this._IngridientLocalID = value;
					this.SendPropertyChanged("IngridientLocalID");
					this.OnIngridientLocalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientName
		{
			get
			{
				return this._IngridientName;
			}
			set
			{
				if ((this._IngridientName != value))
				{
					this.OnIngridientNameChanging(value);
					this.SendPropertyChanging();
					this._IngridientName = value;
					this.SendPropertyChanged("IngridientName");
					this.OnIngridientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgrridientToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string IgrridientToolTip
		{
			get
			{
				return this._IgrridientToolTip;
			}
			set
			{
				if ((this._IgrridientToolTip != value))
				{
					this.OnIgrridientToolTipChanging(value);
					this.SendPropertyChanging();
					this._IgrridientToolTip = value;
					this.SendPropertyChanged("IgrridientToolTip");
					this.OnIgrridientToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					if (this._Ingridient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngridientIDChanging(value);
					this.SendPropertyChanging();
					this._IngridientID = value;
					this.SendPropertyChanged("IngridientID");
					this.OnIngridientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLanguageID", DbType="Int NOT NULL")]
		public int IngridientLanguageID
		{
			get
			{
				return this._IngridientLanguageID;
			}
			set
			{
				if ((this._IngridientLanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngridientLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._IngridientLanguageID = value;
					this.SendPropertyChanged("IngridientLanguageID");
					this.OnIngridientLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingridient_IngridientsLocal", Storage="_Ingridient", ThisKey="IngridientID", OtherKey="IngridientID", IsForeignKey=true)]
		public Ingridient Ingridient
		{
			get
			{
				return this._Ingridient.Entity;
			}
			set
			{
				Ingridient previousValue = this._Ingridient.Entity;
				if (((previousValue != value) 
							|| (this._Ingridient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingridient.Entity = null;
						previousValue.IngridientsLocals.Remove(this);
					}
					this._Ingridient.Entity = value;
					if ((value != null))
					{
						value.IngridientsLocals.Add(this);
						this._IngridientID = value.IngridientID;
					}
					else
					{
						this._IngridientID = default(int);
					}
					this.SendPropertyChanged("Ingridient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_IngridientsLocal", Storage="_Language", ThisKey="IngridientLanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.IngridientsLocals.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.IngridientsLocals.Add(this);
						this._IngridientLanguageID = value.LanguageID;
					}
					else
					{
						this._IngridientLanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Languages")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguageID;
		
		private string _LanguageShortCode;
		
		private string _LanguageEnglishName;
		
		private string _LanguageGermanName;
		
		private EntitySet<AllergensLocal> _AllergensLocals;
		
		private EntitySet<CategoriesLocal> _CategoriesLocals;
		
		private EntitySet<IngridientsLocal> _IngridientsLocals;
		
		private EntitySet<ProductsLocal> _ProductsLocals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnLanguageShortCodeChanging(string value);
    partial void OnLanguageShortCodeChanged();
    partial void OnLanguageEnglishNameChanging(string value);
    partial void OnLanguageEnglishNameChanged();
    partial void OnLanguageGermanNameChanging(string value);
    partial void OnLanguageGermanNameChanged();
    #endregion
		
		public Language()
		{
			this._AllergensLocals = new EntitySet<AllergensLocal>(new Action<AllergensLocal>(this.attach_AllergensLocals), new Action<AllergensLocal>(this.detach_AllergensLocals));
			this._CategoriesLocals = new EntitySet<CategoriesLocal>(new Action<CategoriesLocal>(this.attach_CategoriesLocals), new Action<CategoriesLocal>(this.detach_CategoriesLocals));
			this._IngridientsLocals = new EntitySet<IngridientsLocal>(new Action<IngridientsLocal>(this.attach_IngridientsLocals), new Action<IngridientsLocal>(this.detach_IngridientsLocals));
			this._ProductsLocals = new EntitySet<ProductsLocal>(new Action<ProductsLocal>(this.attach_ProductsLocals), new Action<ProductsLocal>(this.detach_ProductsLocals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageShortCode", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string LanguageShortCode
		{
			get
			{
				return this._LanguageShortCode;
			}
			set
			{
				if ((this._LanguageShortCode != value))
				{
					this.OnLanguageShortCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageShortCode = value;
					this.SendPropertyChanged("LanguageShortCode");
					this.OnLanguageShortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageEnglishName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageEnglishName
		{
			get
			{
				return this._LanguageEnglishName;
			}
			set
			{
				if ((this._LanguageEnglishName != value))
				{
					this.OnLanguageEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageEnglishName = value;
					this.SendPropertyChanged("LanguageEnglishName");
					this.OnLanguageEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageGermanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageGermanName
		{
			get
			{
				return this._LanguageGermanName;
			}
			set
			{
				if ((this._LanguageGermanName != value))
				{
					this.OnLanguageGermanNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageGermanName = value;
					this.SendPropertyChanged("LanguageGermanName");
					this.OnLanguageGermanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AllergensLocal", Storage="_AllergensLocals", ThisKey="LanguageID", OtherKey="AllergenLanguageID")]
		public EntitySet<AllergensLocal> AllergensLocals
		{
			get
			{
				return this._AllergensLocals;
			}
			set
			{
				this._AllergensLocals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CategoriesLocal", Storage="_CategoriesLocals", ThisKey="LanguageID", OtherKey="CategoryLanguageID")]
		public EntitySet<CategoriesLocal> CategoriesLocals
		{
			get
			{
				return this._CategoriesLocals;
			}
			set
			{
				this._CategoriesLocals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_IngridientsLocal", Storage="_IngridientsLocals", ThisKey="LanguageID", OtherKey="IngridientLanguageID")]
		public EntitySet<IngridientsLocal> IngridientsLocals
		{
			get
			{
				return this._IngridientsLocals;
			}
			set
			{
				this._IngridientsLocals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ProductsLocal", Storage="_ProductsLocals", ThisKey="LanguageID", OtherKey="ProductLanguageID")]
		public EntitySet<ProductsLocal> ProductsLocals
		{
			get
			{
				return this._ProductsLocals;
			}
			set
			{
				this._ProductsLocals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllergensLocals(AllergensLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_AllergensLocals(AllergensLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_CategoriesLocals(CategoriesLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CategoriesLocals(CategoriesLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_IngridientsLocals(IngridientsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_IngridientsLocals(IngridientsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_ProductsLocals(ProductsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_ProductsLocals(ProductsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _LocationCity;
		
		private string _LocationLocalName;
		
		private string _LocationPostalCode;
		
		private string _LocationStreet;
		
		private string _LocationLocalNumber;
		
		private string _LocationCountry;
		
		private EntitySet<ProductsLocationsID> _ProductsLocationsIDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocationCityChanging(string value);
    partial void OnLocationCityChanged();
    partial void OnLocationLocalNameChanging(string value);
    partial void OnLocationLocalNameChanged();
    partial void OnLocationPostalCodeChanging(string value);
    partial void OnLocationPostalCodeChanged();
    partial void OnLocationStreetChanging(string value);
    partial void OnLocationStreetChanged();
    partial void OnLocationLocalNumberChanging(string value);
    partial void OnLocationLocalNumberChanged();
    partial void OnLocationCountryChanging(string value);
    partial void OnLocationCountryChanged();
    #endregion
		
		public Location()
		{
			this._ProductsLocationsIDs = new EntitySet<ProductsLocationsID>(new Action<ProductsLocationsID>(this.attach_ProductsLocationsIDs), new Action<ProductsLocationsID>(this.detach_ProductsLocationsIDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCity
		{
			get
			{
				return this._LocationCity;
			}
			set
			{
				if ((this._LocationCity != value))
				{
					this.OnLocationCityChanging(value);
					this.SendPropertyChanging();
					this._LocationCity = value;
					this.SendPropertyChanged("LocationCity");
					this.OnLocationCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalName
		{
			get
			{
				return this._LocationLocalName;
			}
			set
			{
				if ((this._LocationLocalName != value))
				{
					this.OnLocationLocalNameChanging(value);
					this.SendPropertyChanging();
					this._LocationLocalName = value;
					this.SendPropertyChanged("LocationLocalName");
					this.OnLocationLocalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationPostalCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LocationPostalCode
		{
			get
			{
				return this._LocationPostalCode;
			}
			set
			{
				if ((this._LocationPostalCode != value))
				{
					this.OnLocationPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationPostalCode = value;
					this.SendPropertyChanged("LocationPostalCode");
					this.OnLocationPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationStreet", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string LocationStreet
		{
			get
			{
				return this._LocationStreet;
			}
			set
			{
				if ((this._LocationStreet != value))
				{
					this.OnLocationStreetChanging(value);
					this.SendPropertyChanging();
					this._LocationStreet = value;
					this.SendPropertyChanged("LocationStreet");
					this.OnLocationStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalNumber
		{
			get
			{
				return this._LocationLocalNumber;
			}
			set
			{
				if ((this._LocationLocalNumber != value))
				{
					this.OnLocationLocalNumberChanging(value);
					this.SendPropertyChanging();
					this._LocationLocalNumber = value;
					this.SendPropertyChanged("LocationLocalNumber");
					this.OnLocationLocalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCountry", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCountry
		{
			get
			{
				return this._LocationCountry;
			}
			set
			{
				if ((this._LocationCountry != value))
				{
					this.OnLocationCountryChanging(value);
					this.SendPropertyChanging();
					this._LocationCountry = value;
					this.SendPropertyChanged("LocationCountry");
					this.OnLocationCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_ProductsLocationsID", Storage="_ProductsLocationsIDs", ThisKey="LocationID", OtherKey="LocationID")]
		public EntitySet<ProductsLocationsID> ProductsLocationsIDs
		{
			get
			{
				return this._ProductsLocationsIDs;
			}
			set
			{
				this._ProductsLocationsIDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductsLocationsIDs(ProductsLocationsID entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_ProductsLocationsIDs(ProductsLocationsID entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _ProductOdrinaryName;
		
		private int _ProductCategoryID;
		
		private short _ProductStatus;
		
		private int _ProductWeight;
		
		private EntitySet<ProductsIngridient> _ProductsIngridients;
		
		private EntitySet<ProductsLocal> _ProductsLocals;
		
		private EntitySet<ProductsLocationsID> _ProductsLocationsIDs;
		
		private EntitySet<ProductProduct> _ProductProducts;
		
		private EntitySet<ProductProduct> _ProductProducts1;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductOdrinaryNameChanging(string value);
    partial void OnProductOdrinaryNameChanged();
    partial void OnProductCategoryIDChanging(int value);
    partial void OnProductCategoryIDChanged();
    partial void OnProductStatusChanging(short value);
    partial void OnProductStatusChanged();
    partial void OnProductWeightChanging(int value);
    partial void OnProductWeightChanged();
    #endregion
		
		public Product()
		{
			this._ProductsIngridients = new EntitySet<ProductsIngridient>(new Action<ProductsIngridient>(this.attach_ProductsIngridients), new Action<ProductsIngridient>(this.detach_ProductsIngridients));
			this._ProductsLocals = new EntitySet<ProductsLocal>(new Action<ProductsLocal>(this.attach_ProductsLocals), new Action<ProductsLocal>(this.detach_ProductsLocals));
			this._ProductsLocationsIDs = new EntitySet<ProductsLocationsID>(new Action<ProductsLocationsID>(this.attach_ProductsLocationsIDs), new Action<ProductsLocationsID>(this.detach_ProductsLocationsIDs));
			this._ProductProducts = new EntitySet<ProductProduct>(new Action<ProductProduct>(this.attach_ProductProducts), new Action<ProductProduct>(this.detach_ProductProducts));
			this._ProductProducts1 = new EntitySet<ProductProduct>(new Action<ProductProduct>(this.attach_ProductProducts1), new Action<ProductProduct>(this.detach_ProductProducts1));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOdrinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductOdrinaryName
		{
			get
			{
				return this._ProductOdrinaryName;
			}
			set
			{
				if ((this._ProductOdrinaryName != value))
				{
					this.OnProductOdrinaryNameChanging(value);
					this.SendPropertyChanging();
					this._ProductOdrinaryName = value;
					this.SendPropertyChanged("ProductOdrinaryName");
					this.OnProductOdrinaryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryID = value;
					this.SendPropertyChanged("ProductCategoryID");
					this.OnProductCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="SmallInt NOT NULL")]
		public short ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this.OnProductStatusChanging(value);
					this.SendPropertyChanging();
					this._ProductStatus = value;
					this.SendPropertyChanged("ProductStatus");
					this.OnProductStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this.OnProductWeightChanging(value);
					this.SendPropertyChanging();
					this._ProductWeight = value;
					this.SendPropertyChanged("ProductWeight");
					this.OnProductWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductsIngridient", Storage="_ProductsIngridients", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductsIngridient> ProductsIngridients
		{
			get
			{
				return this._ProductsIngridients;
			}
			set
			{
				this._ProductsIngridients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductsLocal", Storage="_ProductsLocals", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductsLocal> ProductsLocals
		{
			get
			{
				return this._ProductsLocals;
			}
			set
			{
				this._ProductsLocals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductsLocationsID", Storage="_ProductsLocationsIDs", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductsLocationsID> ProductsLocationsIDs
		{
			get
			{
				return this._ProductsLocationsIDs;
			}
			set
			{
				this._ProductsLocationsIDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProduct", Storage="_ProductProducts", ThisKey="ProductID", OtherKey="ProductParentID")]
		public EntitySet<ProductProduct> ProductProducts
		{
			get
			{
				return this._ProductProducts;
			}
			set
			{
				this._ProductProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProduct1", Storage="_ProductProducts1", ThisKey="ProductID", OtherKey="ProductChildID")]
		public EntitySet<ProductProduct> ProductProducts1
		{
			get
			{
				return this._ProductProducts1;
			}
			set
			{
				this._ProductProducts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="ProductCategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductCategoryID = value.CategoryID;
					}
					else
					{
						this._ProductCategoryID = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductsIngridients(ProductsIngridient entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductsIngridients(ProductsIngridient entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductsLocals(ProductsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductsLocals(ProductsLocal entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductsLocationsIDs(ProductsLocationsID entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductsLocationsIDs(ProductsLocationsID entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductProducts(ProductProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductProducts(ProductProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductProducts1(ProductProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = this;
		}
		
		private void detach_ProductProducts1(ProductProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductsIngridients")]
	public partial class ProductsIngridient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductIngridientID;
		
		private int _ProductID;
		
		private int _IngridientID;
		
		private int _IngridientFeel;
		
		private EntityRef<Ingridient> _Ingridient;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIngridientIDChanging(int value);
    partial void OnProductIngridientIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnIngridientIDChanging(int value);
    partial void OnIngridientIDChanged();
    partial void OnIngridientFeelChanging(int value);
    partial void OnIngridientFeelChanged();
    #endregion
		
		public ProductsIngridient()
		{
			this._Ingridient = default(EntityRef<Ingridient>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductIngridientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductIngridientID
		{
			get
			{
				return this._ProductIngridientID;
			}
			set
			{
				if ((this._ProductIngridientID != value))
				{
					this.OnProductIngridientIDChanging(value);
					this.SendPropertyChanging();
					this._ProductIngridientID = value;
					this.SendPropertyChanged("ProductIngridientID");
					this.OnProductIngridientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					if (this._Ingridient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngridientIDChanging(value);
					this.SendPropertyChanging();
					this._IngridientID = value;
					this.SendPropertyChanged("IngridientID");
					this.OnIngridientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeel", DbType="Int NOT NULL")]
		public int IngridientFeel
		{
			get
			{
				return this._IngridientFeel;
			}
			set
			{
				if ((this._IngridientFeel != value))
				{
					this.OnIngridientFeelChanging(value);
					this.SendPropertyChanging();
					this._IngridientFeel = value;
					this.SendPropertyChanged("IngridientFeel");
					this.OnIngridientFeelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingridient_ProductsIngridient", Storage="_Ingridient", ThisKey="IngridientID", OtherKey="IngridientID", IsForeignKey=true)]
		public Ingridient Ingridient
		{
			get
			{
				return this._Ingridient.Entity;
			}
			set
			{
				Ingridient previousValue = this._Ingridient.Entity;
				if (((previousValue != value) 
							|| (this._Ingridient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingridient.Entity = null;
						previousValue.ProductsIngridients.Remove(this);
					}
					this._Ingridient.Entity = value;
					if ((value != null))
					{
						value.ProductsIngridients.Add(this);
						this._IngridientID = value.IngridientID;
					}
					else
					{
						this._IngridientID = default(int);
					}
					this.SendPropertyChanged("Ingridient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductsIngridient", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductsIngridients.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductsIngridients.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductsLocals")]
	public partial class ProductsLocal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductLocalID;
		
		private string _ProductName;
		
		private string _ProductToolTip;
		
		private int _ProductID;
		
		private int _ProductLanguageID;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductLocalIDChanging(int value);
    partial void OnProductLocalIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductToolTipChanging(string value);
    partial void OnProductToolTipChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductLanguageIDChanging(int value);
    partial void OnProductLanguageIDChanged();
    #endregion
		
		public ProductsLocal()
		{
			this._Language = default(EntityRef<Language>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductLocalID
		{
			get
			{
				return this._ProductLocalID;
			}
			set
			{
				if ((this._ProductLocalID != value))
				{
					this.OnProductLocalIDChanging(value);
					this.SendPropertyChanging();
					this._ProductLocalID = value;
					this.SendPropertyChanged("ProductLocalID");
					this.OnProductLocalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string ProductToolTip
		{
			get
			{
				return this._ProductToolTip;
			}
			set
			{
				if ((this._ProductToolTip != value))
				{
					this.OnProductToolTipChanging(value);
					this.SendPropertyChanging();
					this._ProductToolTip = value;
					this.SendPropertyChanged("ProductToolTip");
					this.OnProductToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLanguageID", DbType="Int NOT NULL")]
		public int ProductLanguageID
		{
			get
			{
				return this._ProductLanguageID;
			}
			set
			{
				if ((this._ProductLanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._ProductLanguageID = value;
					this.SendPropertyChanged("ProductLanguageID");
					this.OnProductLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ProductsLocal", Storage="_Language", ThisKey="ProductLanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.ProductsLocals.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.ProductsLocals.Add(this);
						this._ProductLanguageID = value.LanguageID;
					}
					else
					{
						this._ProductLanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductsLocal", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductsLocals.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductsLocals.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductsLocationsID")]
	public partial class ProductsLocationsID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductLocationID;
		
		private int _ProductID;
		
		private int _LocationID;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductLocationIDChanging(int value);
    partial void OnProductLocationIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    #endregion
		
		public ProductsLocationsID()
		{
			this._Location = default(EntityRef<Location>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductLocationID
		{
			get
			{
				return this._ProductLocationID;
			}
			set
			{
				if ((this._ProductLocationID != value))
				{
					this.OnProductLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ProductLocationID = value;
					this.SendPropertyChanged("ProductLocationID");
					this.OnProductLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_ProductsLocationsID", Storage="_Location", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.ProductsLocationsIDs.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.ProductsLocationsIDs.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductsLocationsID", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductsLocationsIDs.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductsLocationsIDs.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductsSymbols")]
	public partial class ProductsSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductSymbolID;
		
		private int _ProductID;
		
		private int _SymbolID;
		
		private EntityRef<Symbol> _Symbol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductSymbolIDChanging(int value);
    partial void OnProductSymbolIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnSymbolIDChanging(int value);
    partial void OnSymbolIDChanged();
    #endregion
		
		public ProductsSymbol()
		{
			this._Symbol = default(EntityRef<Symbol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSymbolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductSymbolID
		{
			get
			{
				return this._ProductSymbolID;
			}
			set
			{
				if ((this._ProductSymbolID != value))
				{
					this.OnProductSymbolIDChanging(value);
					this.SendPropertyChanging();
					this._ProductSymbolID = value;
					this.SendPropertyChanged("ProductSymbolID");
					this.OnProductSymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Symbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this.OnSymbolIDChanging(value);
					this.SendPropertyChanging();
					this._SymbolID = value;
					this.SendPropertyChanged("SymbolID");
					this.OnSymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Symbol_ProductsSymbol", Storage="_Symbol", ThisKey="ProductID", OtherKey="SymbolID", IsForeignKey=true)]
		public Symbol Symbol
		{
			get
			{
				return this._Symbol.Entity;
			}
			set
			{
				Symbol previousValue = this._Symbol.Entity;
				if (((previousValue != value) 
							|| (this._Symbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Symbol.Entity = null;
						previousValue.ProductsSymbols.Remove(this);
					}
					this._Symbol.Entity = value;
					if ((value != null))
					{
						value.ProductsSymbols.Add(this);
						this._ProductID = value.SymbolID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Symbol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SymbolData")]
	public partial class SymbolData
	{
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		private short _SymbolArt;
		
		public SymbolData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolArt", DbType="SmallInt NOT NULL")]
		public short SymbolArt
		{
			get
			{
				return this._SymbolArt;
			}
			set
			{
				if ((this._SymbolArt != value))
				{
					this._SymbolArt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryData")]
	public partial class CategoryData
	{
		
		private int _CategoryID;
		
		private string _CategoryOrdinaryName;
		
		private int _CategoryLocalID;
		
		private string _CategoryLocalName;
		
		private string _CategoryLocalToolTip;
		
		private int _CategoryLanguageID;
		
		public CategoryData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryOrdinaryName
		{
			get
			{
				return this._CategoryOrdinaryName;
			}
			set
			{
				if ((this._CategoryOrdinaryName != value))
				{
					this._CategoryOrdinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalID", DbType="Int NOT NULL")]
		public int CategoryLocalID
		{
			get
			{
				return this._CategoryLocalID;
			}
			set
			{
				if ((this._CategoryLocalID != value))
				{
					this._CategoryLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryLocalName
		{
			get
			{
				return this._CategoryLocalName;
			}
			set
			{
				if ((this._CategoryLocalName != value))
				{
					this._CategoryLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string CategoryLocalToolTip
		{
			get
			{
				return this._CategoryLocalToolTip;
			}
			set
			{
				if ((this._CategoryLocalToolTip != value))
				{
					this._CategoryLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLanguageID", DbType="Int NOT NULL")]
		public int CategoryLanguageID
		{
			get
			{
				return this._CategoryLanguageID;
			}
			set
			{
				if ((this._CategoryLanguageID != value))
				{
					this._CategoryLanguageID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanguageData")]
	public partial class LanguageData
	{
		
		private int _LanguageID;
		
		private string _LanguageShortCode;
		
		private string _LanguageEnglishName;
		
		private string _LanguageGermanName;
		
		public LanguageData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this._LanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageShortCode", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string LanguageShortCode
		{
			get
			{
				return this._LanguageShortCode;
			}
			set
			{
				if ((this._LanguageShortCode != value))
				{
					this._LanguageShortCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageEnglishName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageEnglishName
		{
			get
			{
				return this._LanguageEnglishName;
			}
			set
			{
				if ((this._LanguageEnglishName != value))
				{
					this._LanguageEnglishName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageGermanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageGermanName
		{
			get
			{
				return this._LanguageGermanName;
			}
			set
			{
				if ((this._LanguageGermanName != value))
				{
					this._LanguageGermanName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationData")]
	public partial class LocationData
	{
		
		private int _LocationID;
		
		private string _LocationCity;
		
		private string _LocationLocalName;
		
		private string _LocationPostalCode;
		
		private string _LocationStreet;
		
		private string _LocationLocalNumber;
		
		private string _LocationCountry;
		
		public LocationData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCity
		{
			get
			{
				return this._LocationCity;
			}
			set
			{
				if ((this._LocationCity != value))
				{
					this._LocationCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalName
		{
			get
			{
				return this._LocationLocalName;
			}
			set
			{
				if ((this._LocationLocalName != value))
				{
					this._LocationLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationPostalCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LocationPostalCode
		{
			get
			{
				return this._LocationPostalCode;
			}
			set
			{
				if ((this._LocationPostalCode != value))
				{
					this._LocationPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationStreet", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string LocationStreet
		{
			get
			{
				return this._LocationStreet;
			}
			set
			{
				if ((this._LocationStreet != value))
				{
					this._LocationStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalNumber
		{
			get
			{
				return this._LocationLocalNumber;
			}
			set
			{
				if ((this._LocationLocalNumber != value))
				{
					this._LocationLocalNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCountry", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCountry
		{
			get
			{
				return this._LocationCountry;
			}
			set
			{
				if ((this._LocationCountry != value))
				{
					this._LocationCountry = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductData")]
	public partial class ProductData
	{
		
		private int _ProductID;
		
		private string _ProductOdrinaryName;
		
		private int _ProductLocalID;
		
		private string _ProductName;
		
		private string _ProductToolTip;
		
		private short _ProductStatus;
		
		private int _ProductWeight;
		
		private int _ProductLanguageID;
		
		private int _ProductCategoryID;
		
		private int _ProductLocationID;
		
		private int _LocationID;
		
		private int _ProductSymbolID;
		
		private int _SymbolID;
		
		public ProductData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOdrinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductOdrinaryName
		{
			get
			{
				return this._ProductOdrinaryName;
			}
			set
			{
				if ((this._ProductOdrinaryName != value))
				{
					this._ProductOdrinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocalID", DbType="Int NOT NULL")]
		public int ProductLocalID
		{
			get
			{
				return this._ProductLocalID;
			}
			set
			{
				if ((this._ProductLocalID != value))
				{
					this._ProductLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string ProductToolTip
		{
			get
			{
				return this._ProductToolTip;
			}
			set
			{
				if ((this._ProductToolTip != value))
				{
					this._ProductToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="SmallInt NOT NULL")]
		public short ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this._ProductStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this._ProductWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLanguageID", DbType="Int NOT NULL")]
		public int ProductLanguageID
		{
			get
			{
				return this._ProductLanguageID;
			}
			set
			{
				if ((this._ProductLanguageID != value))
				{
					this._ProductLanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this._ProductCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocationID", DbType="Int NOT NULL")]
		public int ProductLocationID
		{
			get
			{
				return this._ProductLocationID;
			}
			set
			{
				if ((this._ProductLocationID != value))
				{
					this._ProductLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSymbolID", DbType="Int NOT NULL")]
		public int ProductSymbolID
		{
			get
			{
				return this._ProductSymbolID;
			}
			set
			{
				if ((this._ProductSymbolID != value))
				{
					this._ProductSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductProducts")]
	public partial class ProductProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductProductsID;
		
		private int _ProductParentID;
		
		private int _ProductChildID;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product> _Product1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductProductsIDChanging(int value);
    partial void OnProductProductsIDChanged();
    partial void OnProductParentIDChanging(int value);
    partial void OnProductParentIDChanged();
    partial void OnProductChildIDChanging(int value);
    partial void OnProductChildIDChanged();
    #endregion
		
		public ProductProduct()
		{
			this._Product = default(EntityRef<Product>);
			this._Product1 = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductProductsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductProductsID
		{
			get
			{
				return this._ProductProductsID;
			}
			set
			{
				if ((this._ProductProductsID != value))
				{
					this.OnProductProductsIDChanging(value);
					this.SendPropertyChanging();
					this._ProductProductsID = value;
					this.SendPropertyChanged("ProductProductsID");
					this.OnProductProductsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductParentID", DbType="Int NOT NULL")]
		public int ProductParentID
		{
			get
			{
				return this._ProductParentID;
			}
			set
			{
				if ((this._ProductParentID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductParentIDChanging(value);
					this.SendPropertyChanging();
					this._ProductParentID = value;
					this.SendPropertyChanged("ProductParentID");
					this.OnProductParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductChildID", DbType="Int NOT NULL")]
		public int ProductChildID
		{
			get
			{
				return this._ProductChildID;
			}
			set
			{
				if ((this._ProductChildID != value))
				{
					if (this._Product1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductChildIDChanging(value);
					this.SendPropertyChanging();
					this._ProductChildID = value;
					this.SendPropertyChanged("ProductChildID");
					this.OnProductChildIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProduct", Storage="_Product", ThisKey="ProductParentID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductProducts.Add(this);
						this._ProductParentID = value.ProductID;
					}
					else
					{
						this._ProductParentID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProduct1", Storage="_Product1", ThisKey="ProductChildID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product1
		{
			get
			{
				return this._Product1.Entity;
			}
			set
			{
				Product previousValue = this._Product1.Entity;
				if (((previousValue != value) 
							|| (this._Product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product1.Entity = null;
						previousValue.ProductProducts1.Remove(this);
					}
					this._Product1.Entity = value;
					if ((value != null))
					{
						value.ProductProducts1.Add(this);
						this._ProductChildID = value.ProductID;
					}
					else
					{
						this._ProductChildID = default(int);
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllergenData")]
	public partial class AllergenData
	{
		
		private int _AllergenID;
		
		private string _AllergenOrdinaryName;
		
		private System.Nullable<int> _AllergenLocalD;
		
		private string _AllergenLocalName;
		
		private string _AllergenLocalToolTip;
		
		private int _AllergenSymbolID;
		
		private System.Nullable<int> _AllergenLanguageID;
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		private short _SymbolArt;
		
		public AllergenData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenOrdinaryName
		{
			get
			{
				return this._AllergenOrdinaryName;
			}
			set
			{
				if ((this._AllergenOrdinaryName != value))
				{
					this._AllergenOrdinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalD", DbType="Int")]
		public System.Nullable<int> AllergenLocalD
		{
			get
			{
				return this._AllergenLocalD;
			}
			set
			{
				if ((this._AllergenLocalD != value))
				{
					this._AllergenLocalD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalName", DbType="NVarChar(100)")]
		public string AllergenLocalName
		{
			get
			{
				return this._AllergenLocalName;
			}
			set
			{
				if ((this._AllergenLocalName != value))
				{
					this._AllergenLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalToolTip", DbType="NVarChar(600)")]
		public string AllergenLocalToolTip
		{
			get
			{
				return this._AllergenLocalToolTip;
			}
			set
			{
				if ((this._AllergenLocalToolTip != value))
				{
					this._AllergenLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenSymbolID", DbType="Int NOT NULL")]
		public int AllergenSymbolID
		{
			get
			{
				return this._AllergenSymbolID;
			}
			set
			{
				if ((this._AllergenSymbolID != value))
				{
					this._AllergenSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLanguageID", DbType="Int")]
		public System.Nullable<int> AllergenLanguageID
		{
			get
			{
				return this._AllergenLanguageID;
			}
			set
			{
				if ((this._AllergenLanguageID != value))
				{
					this._AllergenLanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolArt", DbType="SmallInt NOT NULL")]
		public short SymbolArt
		{
			get
			{
				return this._SymbolArt;
			}
			set
			{
				if ((this._SymbolArt != value))
				{
					this._SymbolArt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IngridientData")]
	public partial class IngridientData
	{
		
		private int _IngridientID;
		
		private string _IngridientOrdinaryName;
		
		private System.Nullable<int> _IngridientLocalID;
		
		private string _IngridientName;
		
		private string _IgrridientToolTip;
		
		private int _IngridientFeelLimit;
		
		private System.Nullable<int> _IngridientLanguageID;
		
		private int _IngridientAllergenID;
		
		private int _AllergenID;
		
		public IngridientData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientOrdinaryName
		{
			get
			{
				return this._IngridientOrdinaryName;
			}
			set
			{
				if ((this._IngridientOrdinaryName != value))
				{
					this._IngridientOrdinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLocalID", DbType="Int")]
		public System.Nullable<int> IngridientLocalID
		{
			get
			{
				return this._IngridientLocalID;
			}
			set
			{
				if ((this._IngridientLocalID != value))
				{
					this._IngridientLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientName", DbType="NVarChar(100)")]
		public string IngridientName
		{
			get
			{
				return this._IngridientName;
			}
			set
			{
				if ((this._IngridientName != value))
				{
					this._IngridientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgrridientToolTip", DbType="NVarChar(600)")]
		public string IgrridientToolTip
		{
			get
			{
				return this._IgrridientToolTip;
			}
			set
			{
				if ((this._IgrridientToolTip != value))
				{
					this._IgrridientToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeelLimit", DbType="Int NOT NULL")]
		public int IngridientFeelLimit
		{
			get
			{
				return this._IngridientFeelLimit;
			}
			set
			{
				if ((this._IngridientFeelLimit != value))
				{
					this._IngridientFeelLimit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLanguageID", DbType="Int")]
		public System.Nullable<int> IngridientLanguageID
		{
			get
			{
				return this._IngridientLanguageID;
			}
			set
			{
				if ((this._IngridientLanguageID != value))
				{
					this._IngridientLanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientAllergenID", DbType="Int NOT NULL")]
		public int IngridientAllergenID
		{
			get
			{
				return this._IngridientAllergenID;
			}
			set
			{
				if ((this._IngridientAllergenID != value))
				{
					this._IngridientAllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
	}
	
	public partial class v_AllergenSymbolResult
	{
		
		private int _AllergenID;
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		public v_AllergenSymbolResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
	}
	
	public partial class v_ProductSymbolResult
	{
		
		private int _ProductID;
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		public v_ProductSymbolResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
	}
	
	public partial class v_CategoryProductsResult
	{
		
		private int _ProductID;
		
		private string _ProductOdrinaryName;
		
		private int _ProductLocalID;
		
		private string _ProductName;
		
		private string _ProductToolTip;
		
		private short _ProductStatus;
		
		private int _ProductWeight;
		
		private int _ProductLanguageID;
		
		private int _ProductCategoryID;
		
		private int _ProductLocationID;
		
		private int _LocationID;
		
		private int _ProductSymbolID;
		
		private int _SymbolID;
		
		public v_CategoryProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOdrinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductOdrinaryName
		{
			get
			{
				return this._ProductOdrinaryName;
			}
			set
			{
				if ((this._ProductOdrinaryName != value))
				{
					this._ProductOdrinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocalID", DbType="Int NOT NULL")]
		public int ProductLocalID
		{
			get
			{
				return this._ProductLocalID;
			}
			set
			{
				if ((this._ProductLocalID != value))
				{
					this._ProductLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string ProductToolTip
		{
			get
			{
				return this._ProductToolTip;
			}
			set
			{
				if ((this._ProductToolTip != value))
				{
					this._ProductToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="SmallInt NOT NULL")]
		public short ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this._ProductStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this._ProductWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLanguageID", DbType="Int NOT NULL")]
		public int ProductLanguageID
		{
			get
			{
				return this._ProductLanguageID;
			}
			set
			{
				if ((this._ProductLanguageID != value))
				{
					this._ProductLanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this._ProductCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocationID", DbType="Int NOT NULL")]
		public int ProductLocationID
		{
			get
			{
				return this._ProductLocationID;
			}
			set
			{
				if ((this._ProductLocationID != value))
				{
					this._ProductLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSymbolID", DbType="Int NOT NULL")]
		public int ProductSymbolID
		{
			get
			{
				return this._ProductSymbolID;
			}
			set
			{
				if ((this._ProductSymbolID != value))
				{
					this._ProductSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class v_IngridientAllergenResult
	{
		
		private int _AllergenID;
		
		private int _IngridientID;
		
		public v_IngridientAllergenResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
	}
	
	public partial class v_ProductIngridientsResult
	{
		
		private int _ProductID;
		
		private int _IngridientID;
		
		public v_ProductIngridientsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
	}
	
	public partial class v_ProductMaskResult
	{
		
		private int _ProductID;
		
		private string _ProductOdrinaryName;
		
		private int _ProductLocalID;
		
		private string _ProductName;
		
		private string _ProductToolTip;
		
		private short _ProductStatus;
		
		private int _ProductWeight;
		
		private int _ProductLanguageID;
		
		private int _ProductCategoryID;
		
		private int _ProductLocationID;
		
		private int _LocationID;
		
		private int _ProductSymbolID;
		
		private int _SymbolID;
		
		public v_ProductMaskResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOdrinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductOdrinaryName
		{
			get
			{
				return this._ProductOdrinaryName;
			}
			set
			{
				if ((this._ProductOdrinaryName != value))
				{
					this._ProductOdrinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocalID", DbType="Int NOT NULL")]
		public int ProductLocalID
		{
			get
			{
				return this._ProductLocalID;
			}
			set
			{
				if ((this._ProductLocalID != value))
				{
					this._ProductLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string ProductToolTip
		{
			get
			{
				return this._ProductToolTip;
			}
			set
			{
				if ((this._ProductToolTip != value))
				{
					this._ProductToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="SmallInt NOT NULL")]
		public short ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this._ProductStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this._ProductWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLanguageID", DbType="Int NOT NULL")]
		public int ProductLanguageID
		{
			get
			{
				return this._ProductLanguageID;
			}
			set
			{
				if ((this._ProductLanguageID != value))
				{
					this._ProductLanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this._ProductCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocationID", DbType="Int NOT NULL")]
		public int ProductLocationID
		{
			get
			{
				return this._ProductLocationID;
			}
			set
			{
				if ((this._ProductLocationID != value))
				{
					this._ProductLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSymbolID", DbType="Int NOT NULL")]
		public int ProductSymbolID
		{
			get
			{
				return this._ProductSymbolID;
			}
			set
			{
				if ((this._ProductSymbolID != value))
				{
					this._ProductSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class ProductUpdateResult
	{
		
		private int _ProductID;
		
		private string _ProductOdrinaryName;
		
		private int _ProductCategoryID;
		
		private short _ProductStatus;
		
		private int _ProductWeight;
		
		public ProductUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOdrinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductOdrinaryName
		{
			get
			{
				return this._ProductOdrinaryName;
			}
			set
			{
				if ((this._ProductOdrinaryName != value))
				{
					this._ProductOdrinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this._ProductCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="SmallInt NOT NULL")]
		public short ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this._ProductStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this._ProductWeight = value;
				}
			}
		}
	}
	
	public partial class AllergenSymbolCreateResult
	{
		
		private int _AllergenSymbolID;
		
		private int _AllergenID;
		
		private int _SymbolID;
		
		public AllergenSymbolCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenSymbolID", DbType="Int NOT NULL")]
		public int AllergenSymbolID
		{
			get
			{
				return this._AllergenSymbolID;
			}
			set
			{
				if ((this._AllergenSymbolID != value))
				{
					this._AllergenSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class AllergenSymbolReadResult
	{
		
		private int _AllergenSymbolID;
		
		private int _AllergenID;
		
		private int _SymbolID;
		
		public AllergenSymbolReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenSymbolID", DbType="Int NOT NULL")]
		public int AllergenSymbolID
		{
			get
			{
				return this._AllergenSymbolID;
			}
			set
			{
				if ((this._AllergenSymbolID != value))
				{
					this._AllergenSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class AllergenSymbolUpdateResult
	{
		
		private int _AllergenSymbolID;
		
		private int _AllergenID;
		
		private int _SymbolID;
		
		public AllergenSymbolUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenSymbolID", DbType="Int NOT NULL")]
		public int AllergenSymbolID
		{
			get
			{
				return this._AllergenSymbolID;
			}
			set
			{
				if ((this._AllergenSymbolID != value))
				{
					this._AllergenSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class CategoryCreateResult
	{
		
		private int _CategoryID;
		
		private string _CategoryOrdinaryName;
		
		public CategoryCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryOrdinaryName
		{
			get
			{
				return this._CategoryOrdinaryName;
			}
			set
			{
				if ((this._CategoryOrdinaryName != value))
				{
					this._CategoryOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class CategoryLocalCreateResult
	{
		
		private int _CategoryLocalID;
		
		private string _CategoryLocalName;
		
		private string _CategoryLocalToolTip;
		
		private int _CategoryID;
		
		private int _CategoryLanguageID;
		
		public CategoryLocalCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalID", DbType="Int NOT NULL")]
		public int CategoryLocalID
		{
			get
			{
				return this._CategoryLocalID;
			}
			set
			{
				if ((this._CategoryLocalID != value))
				{
					this._CategoryLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryLocalName
		{
			get
			{
				return this._CategoryLocalName;
			}
			set
			{
				if ((this._CategoryLocalName != value))
				{
					this._CategoryLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string CategoryLocalToolTip
		{
			get
			{
				return this._CategoryLocalToolTip;
			}
			set
			{
				if ((this._CategoryLocalToolTip != value))
				{
					this._CategoryLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLanguageID", DbType="Int NOT NULL")]
		public int CategoryLanguageID
		{
			get
			{
				return this._CategoryLanguageID;
			}
			set
			{
				if ((this._CategoryLanguageID != value))
				{
					this._CategoryLanguageID = value;
				}
			}
		}
	}
	
	public partial class CategoryLocalReadResult
	{
		
		private int _CategoryLocalID;
		
		private string _CategoryLocalName;
		
		private string _CategoryLocalToolTip;
		
		private int _CategoryID;
		
		private int _CategoryLanguageID;
		
		public CategoryLocalReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalID", DbType="Int NOT NULL")]
		public int CategoryLocalID
		{
			get
			{
				return this._CategoryLocalID;
			}
			set
			{
				if ((this._CategoryLocalID != value))
				{
					this._CategoryLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryLocalName
		{
			get
			{
				return this._CategoryLocalName;
			}
			set
			{
				if ((this._CategoryLocalName != value))
				{
					this._CategoryLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string CategoryLocalToolTip
		{
			get
			{
				return this._CategoryLocalToolTip;
			}
			set
			{
				if ((this._CategoryLocalToolTip != value))
				{
					this._CategoryLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLanguageID", DbType="Int NOT NULL")]
		public int CategoryLanguageID
		{
			get
			{
				return this._CategoryLanguageID;
			}
			set
			{
				if ((this._CategoryLanguageID != value))
				{
					this._CategoryLanguageID = value;
				}
			}
		}
	}
	
	public partial class CategoryLocalUpdateResult
	{
		
		private int _CategoryLocalID;
		
		private string _CategoryLocalName;
		
		private string _CategoryLocalToolTip;
		
		private int _CategoryID;
		
		private int _CategoryLanguageID;
		
		public CategoryLocalUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalID", DbType="Int NOT NULL")]
		public int CategoryLocalID
		{
			get
			{
				return this._CategoryLocalID;
			}
			set
			{
				if ((this._CategoryLocalID != value))
				{
					this._CategoryLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryLocalName
		{
			get
			{
				return this._CategoryLocalName;
			}
			set
			{
				if ((this._CategoryLocalName != value))
				{
					this._CategoryLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string CategoryLocalToolTip
		{
			get
			{
				return this._CategoryLocalToolTip;
			}
			set
			{
				if ((this._CategoryLocalToolTip != value))
				{
					this._CategoryLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryLanguageID", DbType="Int NOT NULL")]
		public int CategoryLanguageID
		{
			get
			{
				return this._CategoryLanguageID;
			}
			set
			{
				if ((this._CategoryLanguageID != value))
				{
					this._CategoryLanguageID = value;
				}
			}
		}
	}
	
	public partial class CategoryReadResult
	{
		
		private int _CategoryID;
		
		private string _CategoryOrdinaryName;
		
		public CategoryReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryOrdinaryName
		{
			get
			{
				return this._CategoryOrdinaryName;
			}
			set
			{
				if ((this._CategoryOrdinaryName != value))
				{
					this._CategoryOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class CategoryUpdateResult
	{
		
		private int _CategoryID;
		
		private string _CategoryOrdinaryName;
		
		public CategoryUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryOrdinaryName
		{
			get
			{
				return this._CategoryOrdinaryName;
			}
			set
			{
				if ((this._CategoryOrdinaryName != value))
				{
					this._CategoryOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class IngridientAllergenCreateResult
	{
		
		private int _IngridientAllergenID;
		
		private int _IngridientID;
		
		private int _AllergenID;
		
		private int _IngridientFeelLimit;
		
		public IngridientAllergenCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientAllergenID", DbType="Int NOT NULL")]
		public int IngridientAllergenID
		{
			get
			{
				return this._IngridientAllergenID;
			}
			set
			{
				if ((this._IngridientAllergenID != value))
				{
					this._IngridientAllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeelLimit", DbType="Int NOT NULL")]
		public int IngridientFeelLimit
		{
			get
			{
				return this._IngridientFeelLimit;
			}
			set
			{
				if ((this._IngridientFeelLimit != value))
				{
					this._IngridientFeelLimit = value;
				}
			}
		}
	}
	
	public partial class IngridientAllergenReadResult
	{
		
		private int _IngridientAllergenID;
		
		private int _IngridientID;
		
		private int _AllergenID;
		
		private int _IngridientFeelLimit;
		
		public IngridientAllergenReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientAllergenID", DbType="Int NOT NULL")]
		public int IngridientAllergenID
		{
			get
			{
				return this._IngridientAllergenID;
			}
			set
			{
				if ((this._IngridientAllergenID != value))
				{
					this._IngridientAllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeelLimit", DbType="Int NOT NULL")]
		public int IngridientFeelLimit
		{
			get
			{
				return this._IngridientFeelLimit;
			}
			set
			{
				if ((this._IngridientFeelLimit != value))
				{
					this._IngridientFeelLimit = value;
				}
			}
		}
	}
	
	public partial class IngridientAllergenUpdateResult
	{
		
		private int _IngridientAllergenID;
		
		private int _IngridientID;
		
		private int _AllergenID;
		
		private int _IngridientFeelLimit;
		
		public IngridientAllergenUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientAllergenID", DbType="Int NOT NULL")]
		public int IngridientAllergenID
		{
			get
			{
				return this._IngridientAllergenID;
			}
			set
			{
				if ((this._IngridientAllergenID != value))
				{
					this._IngridientAllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeelLimit", DbType="Int NOT NULL")]
		public int IngridientFeelLimit
		{
			get
			{
				return this._IngridientFeelLimit;
			}
			set
			{
				if ((this._IngridientFeelLimit != value))
				{
					this._IngridientFeelLimit = value;
				}
			}
		}
	}
	
	public partial class IngridientCreateResult
	{
		
		private int _IngridientID;
		
		private string _IngridientOrdinaryName;
		
		public IngridientCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientOrdinaryName
		{
			get
			{
				return this._IngridientOrdinaryName;
			}
			set
			{
				if ((this._IngridientOrdinaryName != value))
				{
					this._IngridientOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class IngridientLocalCreateResult
	{
		
		private int _IngridientLocalID;
		
		private string _IngridientName;
		
		private string _IgrridientToolTip;
		
		private int _IngridientID;
		
		private int _IngridientLanguageID;
		
		public IngridientLocalCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLocalID", DbType="Int NOT NULL")]
		public int IngridientLocalID
		{
			get
			{
				return this._IngridientLocalID;
			}
			set
			{
				if ((this._IngridientLocalID != value))
				{
					this._IngridientLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientName
		{
			get
			{
				return this._IngridientName;
			}
			set
			{
				if ((this._IngridientName != value))
				{
					this._IngridientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgrridientToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string IgrridientToolTip
		{
			get
			{
				return this._IgrridientToolTip;
			}
			set
			{
				if ((this._IgrridientToolTip != value))
				{
					this._IgrridientToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLanguageID", DbType="Int NOT NULL")]
		public int IngridientLanguageID
		{
			get
			{
				return this._IngridientLanguageID;
			}
			set
			{
				if ((this._IngridientLanguageID != value))
				{
					this._IngridientLanguageID = value;
				}
			}
		}
	}
	
	public partial class IngridientLocalReadResult
	{
		
		private int _IngridientLocalID;
		
		private string _IngridientName;
		
		private string _IgrridientToolTip;
		
		private int _IngridientID;
		
		private int _IngridientLanguageID;
		
		public IngridientLocalReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLocalID", DbType="Int NOT NULL")]
		public int IngridientLocalID
		{
			get
			{
				return this._IngridientLocalID;
			}
			set
			{
				if ((this._IngridientLocalID != value))
				{
					this._IngridientLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientName
		{
			get
			{
				return this._IngridientName;
			}
			set
			{
				if ((this._IngridientName != value))
				{
					this._IngridientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgrridientToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string IgrridientToolTip
		{
			get
			{
				return this._IgrridientToolTip;
			}
			set
			{
				if ((this._IgrridientToolTip != value))
				{
					this._IgrridientToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLanguageID", DbType="Int NOT NULL")]
		public int IngridientLanguageID
		{
			get
			{
				return this._IngridientLanguageID;
			}
			set
			{
				if ((this._IngridientLanguageID != value))
				{
					this._IngridientLanguageID = value;
				}
			}
		}
	}
	
	public partial class IngridientLocalUpdateResult
	{
		
		private int _IngridientLocalID;
		
		private string _IngridientName;
		
		private string _IgrridientToolTip;
		
		private int _IngridientID;
		
		private int _IngridientLanguageID;
		
		public IngridientLocalUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLocalID", DbType="Int NOT NULL")]
		public int IngridientLocalID
		{
			get
			{
				return this._IngridientLocalID;
			}
			set
			{
				if ((this._IngridientLocalID != value))
				{
					this._IngridientLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientName
		{
			get
			{
				return this._IngridientName;
			}
			set
			{
				if ((this._IngridientName != value))
				{
					this._IngridientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgrridientToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string IgrridientToolTip
		{
			get
			{
				return this._IgrridientToolTip;
			}
			set
			{
				if ((this._IgrridientToolTip != value))
				{
					this._IgrridientToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientLanguageID", DbType="Int NOT NULL")]
		public int IngridientLanguageID
		{
			get
			{
				return this._IngridientLanguageID;
			}
			set
			{
				if ((this._IngridientLanguageID != value))
				{
					this._IngridientLanguageID = value;
				}
			}
		}
	}
	
	public partial class IngridientReadResult
	{
		
		private int _IngridientID;
		
		private string _IngridientOrdinaryName;
		
		public IngridientReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientOrdinaryName
		{
			get
			{
				return this._IngridientOrdinaryName;
			}
			set
			{
				if ((this._IngridientOrdinaryName != value))
				{
					this._IngridientOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class IngridientUpdateResult
	{
		
		private int _IngridientID;
		
		private string _IngridientOrdinaryName;
		
		public IngridientUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IngridientOrdinaryName
		{
			get
			{
				return this._IngridientOrdinaryName;
			}
			set
			{
				if ((this._IngridientOrdinaryName != value))
				{
					this._IngridientOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class LanguageCreateResult
	{
		
		private int _LanguageID;
		
		private string _LanguageShortCode;
		
		private string _LanguageEnglishName;
		
		private string _LanguageGermanName;
		
		public LanguageCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this._LanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageShortCode", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string LanguageShortCode
		{
			get
			{
				return this._LanguageShortCode;
			}
			set
			{
				if ((this._LanguageShortCode != value))
				{
					this._LanguageShortCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageEnglishName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageEnglishName
		{
			get
			{
				return this._LanguageEnglishName;
			}
			set
			{
				if ((this._LanguageEnglishName != value))
				{
					this._LanguageEnglishName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageGermanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageGermanName
		{
			get
			{
				return this._LanguageGermanName;
			}
			set
			{
				if ((this._LanguageGermanName != value))
				{
					this._LanguageGermanName = value;
				}
			}
		}
	}
	
	public partial class LanguageReadResult
	{
		
		private int _LanguageID;
		
		private string _LanguageShortCode;
		
		private string _LanguageEnglishName;
		
		private string _LanguageGermanName;
		
		public LanguageReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this._LanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageShortCode", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string LanguageShortCode
		{
			get
			{
				return this._LanguageShortCode;
			}
			set
			{
				if ((this._LanguageShortCode != value))
				{
					this._LanguageShortCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageEnglishName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageEnglishName
		{
			get
			{
				return this._LanguageEnglishName;
			}
			set
			{
				if ((this._LanguageEnglishName != value))
				{
					this._LanguageEnglishName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageGermanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageGermanName
		{
			get
			{
				return this._LanguageGermanName;
			}
			set
			{
				if ((this._LanguageGermanName != value))
				{
					this._LanguageGermanName = value;
				}
			}
		}
	}
	
	public partial class LanguageUpdateResult
	{
		
		private int _LanguageID;
		
		private string _LanguageShortCode;
		
		private string _LanguageEnglishName;
		
		private string _LanguageGermanName;
		
		public LanguageUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this._LanguageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageShortCode", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string LanguageShortCode
		{
			get
			{
				return this._LanguageShortCode;
			}
			set
			{
				if ((this._LanguageShortCode != value))
				{
					this._LanguageShortCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageEnglishName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageEnglishName
		{
			get
			{
				return this._LanguageEnglishName;
			}
			set
			{
				if ((this._LanguageEnglishName != value))
				{
					this._LanguageEnglishName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageGermanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LanguageGermanName
		{
			get
			{
				return this._LanguageGermanName;
			}
			set
			{
				if ((this._LanguageGermanName != value))
				{
					this._LanguageGermanName = value;
				}
			}
		}
	}
	
	public partial class LocationCreateResult
	{
		
		private int _LocationID;
		
		private string _LocationCity;
		
		private string _LocationLocalName;
		
		private string _LocationPostalCode;
		
		private string _LocationStreet;
		
		private string _LocationLocalNumber;
		
		private string _LocationCountry;
		
		public LocationCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCity
		{
			get
			{
				return this._LocationCity;
			}
			set
			{
				if ((this._LocationCity != value))
				{
					this._LocationCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalName
		{
			get
			{
				return this._LocationLocalName;
			}
			set
			{
				if ((this._LocationLocalName != value))
				{
					this._LocationLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationPostalCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LocationPostalCode
		{
			get
			{
				return this._LocationPostalCode;
			}
			set
			{
				if ((this._LocationPostalCode != value))
				{
					this._LocationPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationStreet", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string LocationStreet
		{
			get
			{
				return this._LocationStreet;
			}
			set
			{
				if ((this._LocationStreet != value))
				{
					this._LocationStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalNumber
		{
			get
			{
				return this._LocationLocalNumber;
			}
			set
			{
				if ((this._LocationLocalNumber != value))
				{
					this._LocationLocalNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCountry", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCountry
		{
			get
			{
				return this._LocationCountry;
			}
			set
			{
				if ((this._LocationCountry != value))
				{
					this._LocationCountry = value;
				}
			}
		}
	}
	
	public partial class LocationReadResult
	{
		
		private int _LocationID;
		
		private string _LocationCity;
		
		private string _LocationLocalName;
		
		private string _LocationPostalCode;
		
		private string _LocationStreet;
		
		private string _LocationLocalNumber;
		
		private string _LocationCountry;
		
		public LocationReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCity
		{
			get
			{
				return this._LocationCity;
			}
			set
			{
				if ((this._LocationCity != value))
				{
					this._LocationCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalName
		{
			get
			{
				return this._LocationLocalName;
			}
			set
			{
				if ((this._LocationLocalName != value))
				{
					this._LocationLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationPostalCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LocationPostalCode
		{
			get
			{
				return this._LocationPostalCode;
			}
			set
			{
				if ((this._LocationPostalCode != value))
				{
					this._LocationPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationStreet", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string LocationStreet
		{
			get
			{
				return this._LocationStreet;
			}
			set
			{
				if ((this._LocationStreet != value))
				{
					this._LocationStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalNumber
		{
			get
			{
				return this._LocationLocalNumber;
			}
			set
			{
				if ((this._LocationLocalNumber != value))
				{
					this._LocationLocalNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCountry", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCountry
		{
			get
			{
				return this._LocationCountry;
			}
			set
			{
				if ((this._LocationCountry != value))
				{
					this._LocationCountry = value;
				}
			}
		}
	}
	
	public partial class LocationUpdateResult
	{
		
		private int _LocationID;
		
		private string _LocationCity;
		
		private string _LocationLocalName;
		
		private string _LocationPostalCode;
		
		private string _LocationStreet;
		
		private string _LocationLocalNumber;
		
		private string _LocationCountry;
		
		public LocationUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCity
		{
			get
			{
				return this._LocationCity;
			}
			set
			{
				if ((this._LocationCity != value))
				{
					this._LocationCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalName
		{
			get
			{
				return this._LocationLocalName;
			}
			set
			{
				if ((this._LocationLocalName != value))
				{
					this._LocationLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationPostalCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LocationPostalCode
		{
			get
			{
				return this._LocationPostalCode;
			}
			set
			{
				if ((this._LocationPostalCode != value))
				{
					this._LocationPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationStreet", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string LocationStreet
		{
			get
			{
				return this._LocationStreet;
			}
			set
			{
				if ((this._LocationStreet != value))
				{
					this._LocationStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationLocalNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string LocationLocalNumber
		{
			get
			{
				return this._LocationLocalNumber;
			}
			set
			{
				if ((this._LocationLocalNumber != value))
				{
					this._LocationLocalNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCountry", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationCountry
		{
			get
			{
				return this._LocationCountry;
			}
			set
			{
				if ((this._LocationCountry != value))
				{
					this._LocationCountry = value;
				}
			}
		}
	}
	
	public partial class ProductCreateResult
	{
		
		private int _ProductID;
		
		private string _ProductOdrinaryName;
		
		private int _ProductCategoryID;
		
		private short _ProductStatus;
		
		private int _ProductWeight;
		
		public ProductCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOdrinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductOdrinaryName
		{
			get
			{
				return this._ProductOdrinaryName;
			}
			set
			{
				if ((this._ProductOdrinaryName != value))
				{
					this._ProductOdrinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this._ProductCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="SmallInt NOT NULL")]
		public short ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this._ProductStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this._ProductWeight = value;
				}
			}
		}
	}
	
	public partial class ProductIngridientCreateResult
	{
		
		private int _ProductIngridientID;
		
		private int _ProductID;
		
		private int _IngridientID;
		
		private int _IngridientFeel;
		
		public ProductIngridientCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductIngridientID", DbType="Int NOT NULL")]
		public int ProductIngridientID
		{
			get
			{
				return this._ProductIngridientID;
			}
			set
			{
				if ((this._ProductIngridientID != value))
				{
					this._ProductIngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeel", DbType="Int NOT NULL")]
		public int IngridientFeel
		{
			get
			{
				return this._IngridientFeel;
			}
			set
			{
				if ((this._IngridientFeel != value))
				{
					this._IngridientFeel = value;
				}
			}
		}
	}
	
	public partial class ProductIngridientReadResult
	{
		
		private int _ProductIngridientID;
		
		private int _ProductID;
		
		private int _IngridientID;
		
		private int _IngridientFeel;
		
		public ProductIngridientReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductIngridientID", DbType="Int NOT NULL")]
		public int ProductIngridientID
		{
			get
			{
				return this._ProductIngridientID;
			}
			set
			{
				if ((this._ProductIngridientID != value))
				{
					this._ProductIngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeel", DbType="Int NOT NULL")]
		public int IngridientFeel
		{
			get
			{
				return this._IngridientFeel;
			}
			set
			{
				if ((this._IngridientFeel != value))
				{
					this._IngridientFeel = value;
				}
			}
		}
	}
	
	public partial class ProductIngridientUpdateResult
	{
		
		private int _ProductIngridientID;
		
		private int _ProductID;
		
		private int _IngridientID;
		
		private int _IngridientFeel;
		
		public ProductIngridientUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductIngridientID", DbType="Int NOT NULL")]
		public int ProductIngridientID
		{
			get
			{
				return this._ProductIngridientID;
			}
			set
			{
				if ((this._ProductIngridientID != value))
				{
					this._ProductIngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientID", DbType="Int NOT NULL")]
		public int IngridientID
		{
			get
			{
				return this._IngridientID;
			}
			set
			{
				if ((this._IngridientID != value))
				{
					this._IngridientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngridientFeel", DbType="Int NOT NULL")]
		public int IngridientFeel
		{
			get
			{
				return this._IngridientFeel;
			}
			set
			{
				if ((this._IngridientFeel != value))
				{
					this._IngridientFeel = value;
				}
			}
		}
	}
	
	public partial class ProductLocalCreateResult
	{
		
		private int _ProductLocalID;
		
		private string _ProductName;
		
		private string _ProductToolTip;
		
		private int _ProductID;
		
		private int _ProductLanguageID;
		
		public ProductLocalCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocalID", DbType="Int NOT NULL")]
		public int ProductLocalID
		{
			get
			{
				return this._ProductLocalID;
			}
			set
			{
				if ((this._ProductLocalID != value))
				{
					this._ProductLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string ProductToolTip
		{
			get
			{
				return this._ProductToolTip;
			}
			set
			{
				if ((this._ProductToolTip != value))
				{
					this._ProductToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLanguageID", DbType="Int NOT NULL")]
		public int ProductLanguageID
		{
			get
			{
				return this._ProductLanguageID;
			}
			set
			{
				if ((this._ProductLanguageID != value))
				{
					this._ProductLanguageID = value;
				}
			}
		}
	}
	
	public partial class ProductLocalReadResult
	{
		
		private int _ProductLocalID;
		
		private string _ProductName;
		
		private string _ProductToolTip;
		
		private int _ProductID;
		
		private int _ProductLanguageID;
		
		public ProductLocalReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocalID", DbType="Int NOT NULL")]
		public int ProductLocalID
		{
			get
			{
				return this._ProductLocalID;
			}
			set
			{
				if ((this._ProductLocalID != value))
				{
					this._ProductLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string ProductToolTip
		{
			get
			{
				return this._ProductToolTip;
			}
			set
			{
				if ((this._ProductToolTip != value))
				{
					this._ProductToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLanguageID", DbType="Int NOT NULL")]
		public int ProductLanguageID
		{
			get
			{
				return this._ProductLanguageID;
			}
			set
			{
				if ((this._ProductLanguageID != value))
				{
					this._ProductLanguageID = value;
				}
			}
		}
	}
	
	public partial class ProductLocalUpdateResult
	{
		
		private int _ProductLocalID;
		
		private string _ProductName;
		
		private string _ProductToolTip;
		
		private int _ProductID;
		
		private int _ProductLanguageID;
		
		public ProductLocalUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocalID", DbType="Int NOT NULL")]
		public int ProductLocalID
		{
			get
			{
				return this._ProductLocalID;
			}
			set
			{
				if ((this._ProductLocalID != value))
				{
					this._ProductLocalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string ProductToolTip
		{
			get
			{
				return this._ProductToolTip;
			}
			set
			{
				if ((this._ProductToolTip != value))
				{
					this._ProductToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLanguageID", DbType="Int NOT NULL")]
		public int ProductLanguageID
		{
			get
			{
				return this._ProductLanguageID;
			}
			set
			{
				if ((this._ProductLanguageID != value))
				{
					this._ProductLanguageID = value;
				}
			}
		}
	}
	
	public partial class ProductLocationCreateResult
	{
		
		private int _ProductLocationID;
		
		private int _ProductID;
		
		private int _LocationID;
		
		public ProductLocationCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocationID", DbType="Int NOT NULL")]
		public int ProductLocationID
		{
			get
			{
				return this._ProductLocationID;
			}
			set
			{
				if ((this._ProductLocationID != value))
				{
					this._ProductLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
	}
	
	public partial class ProductLocationReadResult
	{
		
		private int _ProductLocationID;
		
		private int _ProductID;
		
		private int _LocationID;
		
		public ProductLocationReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocationID", DbType="Int NOT NULL")]
		public int ProductLocationID
		{
			get
			{
				return this._ProductLocationID;
			}
			set
			{
				if ((this._ProductLocationID != value))
				{
					this._ProductLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
	}
	
	public partial class ProductLocationUpdateResult
	{
		
		private int _ProductLocationID;
		
		private int _ProductID;
		
		private int _LocationID;
		
		public ProductLocationUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLocationID", DbType="Int NOT NULL")]
		public int ProductLocationID
		{
			get
			{
				return this._ProductLocationID;
			}
			set
			{
				if ((this._ProductLocationID != value))
				{
					this._ProductLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
	}
	
	public partial class ProductProductCreateResult
	{
		
		private int _ProductProductsID;
		
		private int _ProductParentID;
		
		private int _ProductChildID;
		
		public ProductProductCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductProductsID", DbType="Int NOT NULL")]
		public int ProductProductsID
		{
			get
			{
				return this._ProductProductsID;
			}
			set
			{
				if ((this._ProductProductsID != value))
				{
					this._ProductProductsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductParentID", DbType="Int NOT NULL")]
		public int ProductParentID
		{
			get
			{
				return this._ProductParentID;
			}
			set
			{
				if ((this._ProductParentID != value))
				{
					this._ProductParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductChildID", DbType="Int NOT NULL")]
		public int ProductChildID
		{
			get
			{
				return this._ProductChildID;
			}
			set
			{
				if ((this._ProductChildID != value))
				{
					this._ProductChildID = value;
				}
			}
		}
	}
	
	public partial class ProductProductReadResult
	{
		
		private int _ProductProductsID;
		
		private int _ProductParentID;
		
		private int _ProductChildID;
		
		public ProductProductReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductProductsID", DbType="Int NOT NULL")]
		public int ProductProductsID
		{
			get
			{
				return this._ProductProductsID;
			}
			set
			{
				if ((this._ProductProductsID != value))
				{
					this._ProductProductsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductParentID", DbType="Int NOT NULL")]
		public int ProductParentID
		{
			get
			{
				return this._ProductParentID;
			}
			set
			{
				if ((this._ProductParentID != value))
				{
					this._ProductParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductChildID", DbType="Int NOT NULL")]
		public int ProductChildID
		{
			get
			{
				return this._ProductChildID;
			}
			set
			{
				if ((this._ProductChildID != value))
				{
					this._ProductChildID = value;
				}
			}
		}
	}
	
	public partial class ProductProductUpdateResult
	{
		
		private int _ProductProductsID;
		
		private int _ProductParentID;
		
		private int _ProductChildID;
		
		public ProductProductUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductProductsID", DbType="Int NOT NULL")]
		public int ProductProductsID
		{
			get
			{
				return this._ProductProductsID;
			}
			set
			{
				if ((this._ProductProductsID != value))
				{
					this._ProductProductsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductParentID", DbType="Int NOT NULL")]
		public int ProductParentID
		{
			get
			{
				return this._ProductParentID;
			}
			set
			{
				if ((this._ProductParentID != value))
				{
					this._ProductParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductChildID", DbType="Int NOT NULL")]
		public int ProductChildID
		{
			get
			{
				return this._ProductChildID;
			}
			set
			{
				if ((this._ProductChildID != value))
				{
					this._ProductChildID = value;
				}
			}
		}
	}
	
	public partial class ProductReadResult
	{
		
		private int _ProductID;
		
		private string _ProductOdrinaryName;
		
		private int _ProductCategoryID;
		
		private short _ProductStatus;
		
		private int _ProductWeight;
		
		public ProductReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOdrinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductOdrinaryName
		{
			get
			{
				return this._ProductOdrinaryName;
			}
			set
			{
				if ((this._ProductOdrinaryName != value))
				{
					this._ProductOdrinaryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this._ProductCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="SmallInt NOT NULL")]
		public short ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this._ProductStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this._ProductWeight = value;
				}
			}
		}
	}
	
	public partial class ProductSymbolCreateResult
	{
		
		private int _ProductSymbolID;
		
		private int _ProductID;
		
		private int _SymbolID;
		
		public ProductSymbolCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSymbolID", DbType="Int NOT NULL")]
		public int ProductSymbolID
		{
			get
			{
				return this._ProductSymbolID;
			}
			set
			{
				if ((this._ProductSymbolID != value))
				{
					this._ProductSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class ProductSymbolReadResult
	{
		
		private int _ProductSymbolID;
		
		private int _ProductID;
		
		private int _SymbolID;
		
		public ProductSymbolReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSymbolID", DbType="Int NOT NULL")]
		public int ProductSymbolID
		{
			get
			{
				return this._ProductSymbolID;
			}
			set
			{
				if ((this._ProductSymbolID != value))
				{
					this._ProductSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class ProductSymbolUpdateResult
	{
		
		private int _ProductSymbolID;
		
		private int _ProductID;
		
		private int _SymbolID;
		
		public ProductSymbolUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSymbolID", DbType="Int NOT NULL")]
		public int ProductSymbolID
		{
			get
			{
				return this._ProductSymbolID;
			}
			set
			{
				if ((this._ProductSymbolID != value))
				{
					this._ProductSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
	}
	
	public partial class SymbolCreateResult
	{
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		private short _SymbolArt;
		
		public SymbolCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolArt", DbType="SmallInt NOT NULL")]
		public short SymbolArt
		{
			get
			{
				return this._SymbolArt;
			}
			set
			{
				if ((this._SymbolArt != value))
				{
					this._SymbolArt = value;
				}
			}
		}
	}
	
	public partial class SymbolUpdateResult
	{
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		private short _SymbolArt;
		
		public SymbolUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolArt", DbType="SmallInt NOT NULL")]
		public short SymbolArt
		{
			get
			{
				return this._SymbolArt;
			}
			set
			{
				if ((this._SymbolArt != value))
				{
					this._SymbolArt = value;
				}
			}
		}
	}
	
	public partial class SymbolReadResult
	{
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		private short _SymbolArt;
		
		public SymbolReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolArt", DbType="SmallInt NOT NULL")]
		public short SymbolArt
		{
			get
			{
				return this._SymbolArt;
			}
			set
			{
				if ((this._SymbolArt != value))
				{
					this._SymbolArt = value;
				}
			}
		}
	}
	
	public partial class AllergenCreateResult
	{
		
		private int _AllergenID;
		
		private string _AllergenOrdinaryName;
		
		public AllergenCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenOrdinaryName
		{
			get
			{
				return this._AllergenOrdinaryName;
			}
			set
			{
				if ((this._AllergenOrdinaryName != value))
				{
					this._AllergenOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class AllergenReadResult
	{
		
		private int _AllergenID;
		
		private string _AllergenOrdinaryName;
		
		public AllergenReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenOrdinaryName
		{
			get
			{
				return this._AllergenOrdinaryName;
			}
			set
			{
				if ((this._AllergenOrdinaryName != value))
				{
					this._AllergenOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class AllergenLocalCreateResult
	{
		
		private int _AllergenLocalD;
		
		private string _AllergenLocalName;
		
		private string _AllergenLocalToolTip;
		
		private int _AllergenID;
		
		private int _AllergenLanguageID;
		
		public AllergenLocalCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalD", DbType="Int NOT NULL")]
		public int AllergenLocalD
		{
			get
			{
				return this._AllergenLocalD;
			}
			set
			{
				if ((this._AllergenLocalD != value))
				{
					this._AllergenLocalD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenLocalName
		{
			get
			{
				return this._AllergenLocalName;
			}
			set
			{
				if ((this._AllergenLocalName != value))
				{
					this._AllergenLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string AllergenLocalToolTip
		{
			get
			{
				return this._AllergenLocalToolTip;
			}
			set
			{
				if ((this._AllergenLocalToolTip != value))
				{
					this._AllergenLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLanguageID", DbType="Int NOT NULL")]
		public int AllergenLanguageID
		{
			get
			{
				return this._AllergenLanguageID;
			}
			set
			{
				if ((this._AllergenLanguageID != value))
				{
					this._AllergenLanguageID = value;
				}
			}
		}
	}
	
	public partial class AllergenLocalReadResult
	{
		
		private int _AllergenLocalD;
		
		private string _AllergenLocalName;
		
		private string _AllergenLocalToolTip;
		
		private int _AllergenID;
		
		private int _AllergenLanguageID;
		
		public AllergenLocalReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalD", DbType="Int NOT NULL")]
		public int AllergenLocalD
		{
			get
			{
				return this._AllergenLocalD;
			}
			set
			{
				if ((this._AllergenLocalD != value))
				{
					this._AllergenLocalD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenLocalName
		{
			get
			{
				return this._AllergenLocalName;
			}
			set
			{
				if ((this._AllergenLocalName != value))
				{
					this._AllergenLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string AllergenLocalToolTip
		{
			get
			{
				return this._AllergenLocalToolTip;
			}
			set
			{
				if ((this._AllergenLocalToolTip != value))
				{
					this._AllergenLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLanguageID", DbType="Int NOT NULL")]
		public int AllergenLanguageID
		{
			get
			{
				return this._AllergenLanguageID;
			}
			set
			{
				if ((this._AllergenLanguageID != value))
				{
					this._AllergenLanguageID = value;
				}
			}
		}
	}
	
	public partial class AllergenLocalUpdateResult
	{
		
		private int _AllergenLocalD;
		
		private string _AllergenLocalName;
		
		private string _AllergenLocalToolTip;
		
		private int _AllergenID;
		
		private int _AllergenLanguageID;
		
		public AllergenLocalUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalD", DbType="Int NOT NULL")]
		public int AllergenLocalD
		{
			get
			{
				return this._AllergenLocalD;
			}
			set
			{
				if ((this._AllergenLocalD != value))
				{
					this._AllergenLocalD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenLocalName
		{
			get
			{
				return this._AllergenLocalName;
			}
			set
			{
				if ((this._AllergenLocalName != value))
				{
					this._AllergenLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalToolTip", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string AllergenLocalToolTip
		{
			get
			{
				return this._AllergenLocalToolTip;
			}
			set
			{
				if ((this._AllergenLocalToolTip != value))
				{
					this._AllergenLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLanguageID", DbType="Int NOT NULL")]
		public int AllergenLanguageID
		{
			get
			{
				return this._AllergenLanguageID;
			}
			set
			{
				if ((this._AllergenLanguageID != value))
				{
					this._AllergenLanguageID = value;
				}
			}
		}
	}
	
	public partial class AllergenUpdateResult
	{
		
		private int _AllergenID;
		
		private string _AllergenOrdinaryName;
		
		public AllergenUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenID", DbType="Int NOT NULL")]
		public int AllergenID
		{
			get
			{
				return this._AllergenID;
			}
			set
			{
				if ((this._AllergenID != value))
				{
					this._AllergenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenOrdinaryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AllergenOrdinaryName
		{
			get
			{
				return this._AllergenOrdinaryName;
			}
			set
			{
				if ((this._AllergenOrdinaryName != value))
				{
					this._AllergenOrdinaryName = value;
				}
			}
		}
	}
	
	public partial class v_ProductAllergensResult
	{
		
		private string _AllergenLocalName;
		
		private string _AllergenLocalToolTip;
		
		private short _SymbolArt;
		
		private int _SymbolID;
		
		private System.Data.Linq.Binary _SymbolImage;
		
		public v_ProductAllergensResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalName", DbType="NVarChar(100)")]
		public string AllergenLocalName
		{
			get
			{
				return this._AllergenLocalName;
			}
			set
			{
				if ((this._AllergenLocalName != value))
				{
					this._AllergenLocalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenLocalToolTip", DbType="NVarChar(600)")]
		public string AllergenLocalToolTip
		{
			get
			{
				return this._AllergenLocalToolTip;
			}
			set
			{
				if ((this._AllergenLocalToolTip != value))
				{
					this._AllergenLocalToolTip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolArt", DbType="SmallInt NOT NULL")]
		public short SymbolArt
		{
			get
			{
				return this._SymbolArt;
			}
			set
			{
				if ((this._SymbolArt != value))
				{
					this._SymbolArt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int NOT NULL")]
		public int SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this._SymbolImage = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
